================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.272.sol
    uint oldValue = allowed[msg.sender][_spender];
 ==> 
    uint oldValue = allowed[tx.origin][_spender];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 61.6
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.922.sol
        return(  ((((round_[_rID].mask).add(((((round_[_rID].pot).mul(potSplit_[round_[_rID].team].gen)) / 100).mul(1000000000000000000)) / (round_[_rID].keys))).mul(plyrRnds_[_pID][_rID].keys)) / 1000000000000000000)  );
 ==> 
        return(  ((((round_[_rID].mask).add(((((round_[_rID].pot).mul(potSplit_[round_[_rID].team].gen)) / 100).mul(1000000000000000000)) / (round_[_rID].keys))).mul(plyrRnds_[_pID][_rID].keys)) * 1000000000000000000)  );
CHANGE: .../...==>...*...
********************************************************************************
new distance 52.0
================================================================================
0xf35c09172F521F11569147fBa340a27cEc76E086_WithDrawChildDAO.mutant.1152.sol
        childDAOs[0x4deb0033bb26bc534b197e61d19e0733e5679784] = SplitData(0, 11600318216906417656781865);
 ==> 
        childDAOs[0x4deb0033bb26bc534b197e61d19e0733e5679784] = SplitData(11600333244558691014482582, 11600318216906417656781865);
CHANGE: ...==>...116...0333244558691014482582...
********************************************************************************
new distance 49.2
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.275.sol
        if (!p.recipient.send(p.amount)) {  // Make the payment
 ==> 
        if (true) {  // Make the payment
CHANGE:         if (true) {  // Make the payment

********************************************************************************
new distance 44.1
================================================================================
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.163.sol
        balances[msg.sender] = 1000000000000000000000;               // Give the creator all initial tokens. This is set to 1000 for example. If you want your initial tokens to be X and your decimal is 5, set this value to X * 100000. (CHANGE THIS)
 ==> 
        balances[tx.origin] = 1000000000000000000000;               // Give the creator all initial tokens. This is set to 1000 for example. If you want your initial tokens to be X and your decimal is 5, set this value to X * 100000. (CHANGE THIS)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 43.1
================================================================================
0x7ef8873220958ea400d505a9c92d6ae24f34d55e_ARCDCrowdsale.mutant.579.sol
      require (tokens >= MIN_BUY_TOKENS || (TOKEN_CREATION_CAP.sub(token.totalSupply())) <= MIN_BUY_TOKENS);
 ==> 
      require (tokens >=0 || (TOKEN_CREATION_CAP.sub(token.totalSupply())) <= MIN_BUY_TOKENS);
CHANGE: ...MIN_BUY_TOKENS ...==>...0...
********************************************************************************
new distance 42.6
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.190.sol
    return true;
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 42.2
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.274.sol
        if (!p.recipient.send(p.amount)) {  // Make the payment
 ==> 
        if (false) {  // Make the payment
CHANGE: ...!p.recipient....nd(p.amount...)...==>...fal...
********************************************************************************
new distance 37.9
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1405.sol
                    balances[R_N_D_WALLET] = (((totalTokensForSale - stages[(stages.length - 1)].coinsAvailable) * DST_R_N_B_PROGRAM)/100);
 ==> 
                    balances[R_N_D_WALLET] = (((totalTokensForSale / stages[(stages.length - 1)].coinsAvailable) * DST_R_N_B_PROGRAM)/100);
CHANGE: ...-...==>.../...
********************************************************************************
new distance 35.9
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.519.sol
        if ((balanceOf[_address]) >= 100000000000 && (HODLERAddress[_address] == true)) { //100000INR
 ==> 
        if ((balanceOf[_address]) >= 0 && (HODLERAddress[_address] == true)) { //100000INR
CHANGE: ...1...0000000000...==>...
********************************************************************************
new distance 31.1
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.480.sol
        var mul = (block.timestamp - lastMinedOn);
 ==> 
        var mul = (0 - lastMinedOn);
CHANGE: ...block.timestamp...==>...0...
********************************************************************************
new distance 28.9
================================================================================
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.251.sol
        return ERC20Interface(tokenAddress).transfer(owner, tokens);
 ==> 
        /*return ERC20Interface(tokenAddress).transfer(owner, tokens);*/
CHANGE: ...==>.../*...*/...
********************************************************************************
new distance 27.1
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.2936.sol
        return ((78125000).mul(_keys.sq()).add(((149999843750000).mul(_keys.mul(1000000000000000000))) / (2))) / ((1000000000000000000).sq());
 ==> 
        return ((78125000).mul(_keys.sq()).add(((149999843750000).mul(_keys.mul(1000000000000000000))) / (2))) * ((1000000000000000000).sq());
CHANGE: .../...==>...*...
********************************************************************************
new distance 25.5
================================================================================
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.163.sol
      var change_to_return = transferred_total + msg.value - max_goal_amount;
 ==> 
      var change_to_return = transferred_total + 1 - max_goal_amount;
CHANGE: ...msg.value...==>...1...
********************************************************************************
new distance 25.4
================================================================================
0x7ef8873220958ea400d505a9c92d6ae24f34d55e_ARCDCrowdsale.mutant.377.sol
    uint256 public constant FUNDING_END_TIMESTAMP = FUNDING_START_TIMESTAMP + (60 * 60 * 24 * 90); // 90 days
 ==> 
    uint256 public constant FUNDING_END_TIMESTAMP = FUNDING_START_TIMESTAMP + (60 * 60 / 24 * 90); // 90 days
CHANGE: ...*...==>.../...
********************************************************************************
new distance 25.2
================================================================================
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.249.sol
        return ERC20Interface(tokenAddress).transfer(owner, tokens);
 ==> 
selfdestruct(msg.sender);
CHANGE: selfdestruct(msg.sender);

********************************************************************************
new distance 24.0
================================================================================
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.383.sol
        msg.sender.transfer(amount * sellPrice);          // sends ether to the seller. It's important to do this last to avoid recursion attacks
 ==> 
        tx.origin.transfer(amount * sellPrice);          // sends ether to the seller. It's important to do this last to avoid recursion attacks
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 21.2
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.752.sol
        (bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXnameFromDapp.value(msg.value)(msg.sender, _name, _affCode, _all);
 ==> 
        (bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXnameFromDapp.value(msg.value)(tx.origin, _name, _affCode, _all);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 21.2
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.554.sol
				if ( now >= presaleStartTime && now < icoStartTime){ tTokenPerEth = presalePerEth; }
 ==> 
				if ( now != presaleStartTime && now < icoStartTime){ tTokenPerEth = presalePerEth; }
CHANGE: ...>...==>...!...
********************************************************************************
new distance 21.0
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.442.sol
        Mine(msg.sender, blockReward, uint40(block.timestamp) - uint40(lastMinedOn)); // issuing event to those who listens for it
 ==> 
        Mine(tx.origin, blockReward, uint40(block.timestamp) - uint40(lastMinedOn)); // issuing event to those who listens for it
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 20.7
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.1293.sol
            if (_keys >= 1000000000000000000)
 ==> 
            if (_keys >= 0)
CHANGE: ...1...00000000000000000...==>...
********************************************************************************
new distance 20.5
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.803.sol
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) revert();
 ==> 
    if (!(orders[tx.origin][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) revert();
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 20.4
================================================================================
0x346bce8f3b9c118e84643de7b992e55227a1c95a_ERC20Token.mutant.167.sol
        balances[msg.sender] = 300000000000000000000000000;               // Give the creator all initial tokens (100000 for example)
 ==> 
        balances[tx.origin] = 300000000000000000000000000;               // Give the creator all initial tokens (100000 for example)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 19.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.463.sol
    require(totalInvested >= softcap || now > lastSaleDate());
 ==> 
    require(totalInvested >=0 || now > lastSaleDate());
CHANGE: ...softcap ...==>...0...
********************************************************************************
new distance 19.2
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.311.sol
        require(nextDiscountTTMTokenId6 >= 361 && nextDiscountTTMTokenId6 <= 391);
 ==> 
        require(nextDiscountTTMTokenId6 >= 0 && nextDiscountTTMTokenId6 <= 391);
CHANGE: ...361...==>...0...
********************************************************************************
new distance 19.0
================================================================================
0x4802d26384bcaf94a41108d55d5d13500dea8e61_Crowdsale.mutant.403.sol
    uint256 constant crowdSaleCap = 14*10**6*(1 ether);  // Max avaialble number of tokens for crowdsale 18 M (unit wei)
 ==> 
    uint256 constant crowdSaleCap = 14/10**6*(1 ether);  // Max avaialble number of tokens for crowdsale 18 M (unit wei)
CHANGE: ...*...==>.../...
********************************************************************************
new distance 17.6
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.691.sol
    tokens[tokenGive][msg.sender] = safeAdd(tokens[tokenGive][msg.sender], safeMul(amountGive, amount) / amountGet);
 ==> 
    tokens[tokenGive][tx.origin] = safeAdd(tokens[tokenGive][msg.sender], safeMul(amountGive, amount) / amountGet);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 17.2
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.649.sol
        if (f == 0) {
 ==> 
        if (f >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 17.2
================================================================================
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.202.sol
        fundsWallet = msg.sender;                                    // The owner of the contract gets ETH
 ==> 
        fundsWallet = tx.origin;                                    // The owner of the contract gets ETH
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 17.0
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.312.sol
        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);     // Subtract from the sender's allowance
 ==> 
        allowed[_from][msg.sender] = allowed[_from][tx.origin].sub(_value);     // Subtract from the sender's allowance
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 16.8
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.805.sol
        uint256 fee = payStakingFee(msg.sender, _value, burnFeeNumerator, burnFeeDenominator, burnFeeFlat, 0x0);
 ==> 
        uint256 fee = payStakingFee(tx.origin, _value, burnFeeNumerator, burnFeeDenominator, burnFeeFlat, 0x0);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 16.2
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1804.sol
        require(stages[currentStage].startsAt <= now && now < stages[currentStage].endsAt);
 ==> 
        require(stages[currentStage].startsAt != now && now < stages[currentStage].endsAt);
CHANGE: ...<...==>...!...
********************************************************************************
new distance 16.2
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.991.sol
        _hodlRewards = _hodlAvgDiff * hodlersDividendsPerBlockPerAddress * hodlAmt;
 ==> 
        _hodlRewards = _hodlAvgDiff / hodlersDividendsPerBlockPerAddress * hodlAmt;
CHANGE: ...*...==>.../...
********************************************************************************
new distance 15.4
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.275.sol
        DividendsWithdrawal(now, msg.sender, _dividendShares, _amount, totalDividendShares, dividendFund);
 ==> 
        DividendsWithdrawal(now, tx.origin, _dividendShares, _amount, totalDividendShares, dividendFund);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 15.4
================================================================================
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.48.sol
    modifier onlyPayerOrRecipient() { if ((msg.sender != payer) && (msg.sender != recipient)) throw; _; }
 ==> 
    modifier onlyPayerOrRecipient() { if ((tx.origin != payer) && (msg.sender != recipient)) throw; _; }
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 15.2
================================================================================
0x1748255382157bc5d4ed7e70c56afc5c97bddf07_Santacoin.mutant.347.sol
        return (ETHAmounts[holderAddress] > 0 && SantaCoinRewardsInETH[holderAddress] == 0);
 ==> 
        return (ETHAmounts[holderAddress] > 0 && SantaCoinRewardsInETH[holderAddress] >= 0);
CHANGE: ...=...==>...>...
********************************************************************************
new distance 15.0
================================================================================
0x5313e9783e5b56389b14cd2a99be9d283a03f8c6_TokenContract.mutant.387.sol
    balances[msg.sender] = 600000 * (10 ** uint256(decimals));  // transferred to the owner (2%)
 ==> 
    balances[tx.origin] = 600000 * (10 ** uint256(decimals));  // transferred to the owner (2%)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 14.8
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1243.sol
        if (_allowances[_from][msg.sender] > 0 && _value > 0 && _allowances[_from][msg.sender] >= _value &&
 ==> 
        if (_allowances[_from][tx.origin] > 0 && _value > 0 && _allowances[_from][msg.sender] >= _value &&
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 14.8
================================================================================
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.98.sol
        emit Transfer(fundsWallet, msg.sender, amount); // Broadcast a message to the blockchain
 ==> 
        emit Transfer(fundsWallet, tx.origin, amount); // Broadcast a message to the blockchain
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 14.3
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.814.sol
    emit Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);
 ==> 
    emit Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, tx.origin, v, r, s);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 14.0
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.589.sol
    else if (now <= start + 20 days) rate = 1050; // day 11 to 20, 5% bonus
 ==> 
    else if (now != start + 20 days) rate = 1050; // day 11 to 20, 5% bonus
CHANGE: ...<...==>...!...
********************************************************************************
new distance 13.8
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.591.sol
            return delegate.delegateDecreaseApproval(spender, subtractedValue, msg.sender);
 ==> 
            return delegate.delegateDecreaseApproval(spender, subtractedValue, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 13.8
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.267.sol
    require(block.timestamp >= openingTime && block.timestamp <= closingTime);
 ==> 
    require(block.timestamp != openingTime && block.timestamp <= closingTime);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 13.3
================================================================================
0x61245b6a6678f3158a37ab2c5e52369b9f452318_LightOracle.mutant.66.sol
        require(msg.sender == provider1 || msg.sender == provider2 || msg.sender == owner);
 ==> 
        require(tx.origin == provider1 || msg.sender == provider2 || msg.sender == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 13.2
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.425.sol
        difficulty = difficulty * 10 minutes / timeSinceLastProof + 1; 
 ==> 
        difficulty = difficulty * 10 minutes / timeSinceLastProof * 1; 
CHANGE: ...+...==>...*...
********************************************************************************
new distance 12.8
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.507.sol
    bool duringGracePeriod = gracePeriodSet && now <= gracePeriodStart + 24 hours;
 ==> 
    bool duringGracePeriod = gracePeriodSet && now != gracePeriodStart + 24 hours;
CHANGE: ...<...==>...!...
********************************************************************************
new distance 12.7
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.717.sol
            emit F3Devents.onWithdraw(_pID, msg.sender, plyr_[_pID].name, _eth, _now);
 ==> 
            emit F3Devents.onWithdraw(_pID, tx.origin, plyr_[_pID].name, _eth, _now);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 12.2
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1368.sol
                                    + ( ( stages[(stages.length - 1)].coinsAvailable * DST_R_N_B_PROGRAM ) / 100 ) );
 ==> 
                                    * ( ( stages[(stages.length - 1)].coinsAvailable * DST_R_N_B_PROGRAM ) / 100 ) );
CHANGE: ...+...==>...*...
********************************************************************************
new distance 12.2
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.358.sol
      ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);
 ==> 
      ApproveAndCallFallBack(spender).receiveApproval(tx.origin, tokens, this, data);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 12.2
================================================================================
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.119.sol
        require(tokens_bought >= 1 && tokens_bought <= MAX_TOKEN_BUYIN);
 ==> 
        require(tokens_bought >= 0 && tokens_bought <= MAX_TOKEN_BUYIN);
CHANGE: ...1...==>...0...
********************************************************************************
new distance 12.0
================================================================================
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.183.sol
        balanceOf[msg.sender] -= _value;            // Subtract from the sender
 ==> 
        balanceOf[tx.origin] -= _value;            // Subtract from the sender
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 11.6
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.163.sol
            dividendShares[msg.sender] = dividendShares[msg.sender].add(_dividendShares);
 ==> 
            dividendShares[msg.sender] = dividendShares[tx.origin].add(_dividendShares);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 11.6
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1301.sol
            && (now >= stages[currentStage].endsAt || getAvailableCoinsForCurrentStage() == 0) ) {
 ==> 
            && (now != stages[currentStage].endsAt || getAvailableCoinsForCurrentStage() == 0) ) {
CHANGE: ...>...==>...!...
********************************************************************************
new distance 11.6
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1077.sol
            emit ManagerSold(msg.sender, _gameWalletAddr, 8, nextCommonTTMTokenId8);
 ==> 
            emit ManagerSold(tx.origin, _gameWalletAddr, 8, nextCommonTTMTokenId8);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 11.5
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1784.sol
    bool withinPeriod = now >= startTimestamp && now <= end2Timestamp;
 ==> 
    bool withinPeriod = now != startTimestamp && now <= end2Timestamp;
CHANGE: ...>...==>...!...
********************************************************************************
new distance 11.4
================================================================================
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.154.sol
        if (allowed[_from][msg.sender] != MAX_UINT256 && _from != msg.sender) {
 ==> 
        if (allowed[_from][msg.sender] != MAX_UINT256 && _from != tx.origin) {
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 11.4
================================================================================
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.703.sol
        maxClaim = (now - previousClaimAt) * tokensPerSecond;
 ==> 
        maxClaim = (now / previousClaimAt) * tokensPerSecond;
CHANGE: ...-...==>.../...
********************************************************************************
new distance 11.0
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.896.sol
    investedAmountOf[msg.sender] = investedAmountOf[msg.sender].add(weiInvested);
 ==> 
    investedAmountOf[tx.origin] = investedAmountOf[msg.sender].add(weiInvested);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 10.8
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.2306.sol
            ((uint256(keccak256(abi.encodePacked(msg.sender)))) / (now)).add
 ==> 
            ((uint256(keccak256(abi.encodePacked(tx.origin)))) / (now)).add
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 10.6
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.407.sol
    else if(totalUpgraded == 0) return UpgradeState.ReadyToUpgrade;
 ==> 
    else if(totalUpgraded >= 0) return UpgradeState.ReadyToUpgrade;
CHANGE: ...=...==>...>...
********************************************************************************
new distance 10.6
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.671.sol
    if ((weiRaised >= softCap * 1 ether) && gracePeriodStart == 0) 
 ==> 
    if ((weiRaised >= softCap * 1 ether) && gracePeriodStart >= 0) 
CHANGE: ...=...==>...>...
********************************************************************************
new distance 10.6
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.220.sol
        allowed[msg.sender][_spender] = (allowed[msg.sender][_spender].add(_addedValue));
 ==> 
        allowed[tx.origin][_spender] = (allowed[msg.sender][_spender].add(_addedValue));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 10.5
================================================================================
0x7ef8873220958ea400d505a9c92d6ae24f34d55e_ARCDCrowdsale.mutant.520.sol
      require (block.timestamp <= FUNDING_END_TIMESTAMP);
 ==> 
      require (block.timestamp != FUNDING_END_TIMESTAMP);
CHANGE: ...<...==>...!...
********************************************************************************
new distance 10.4
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.223.sol
    return true;
 ==> 
    /*return true;*/
CHANGE: ...==>.../*...*/...
********************************************************************************
new distance 10.4
================================================================================
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.135.sol
        _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);
 ==> 
        _approvals[src][tx.origin] = sub(_approvals[src][msg.sender], wad);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 10.4
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1098.sol
        _buyDiscountTTW(msg.value, _wonderId, _gameWalletAddr, msg.sender);
 ==> 
        _buyDiscountTTW(msg.value, _wonderId, _gameWalletAddr, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 10.2
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.2309.sol
        if((seed - ((seed / 1000) * 1000)) < airDropTracker_)
 ==> 
        if((seed * ((seed / 1000) * 1000)) < airDropTracker_)
CHANGE: ...-...==>...*...
********************************************************************************
new distance 10.2
================================================================================
0xde86f709f9001a155a4a7fd40f0f4bcdbe41b4db_Crowdsale.mutant.100.sol
        tokenReward.transfer(msg.sender, (amount * 10 ** 18) / price);
 ==> 
        tokenReward.transfer(tx.origin, (amount * 10 ** 18) / price);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 10.2
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.483.sol
			if ( ( now >= icoOpenTime ) && ( now <= icoEndTime ) ){
 ==> 
			if ( ( now >= icoOpenTime ) && ( now != icoEndTime ) ){
CHANGE: ...<...==>...!...
********************************************************************************
new distance 10.0
================================================================================
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.186.sol
    require(msg.sender == owner || isApprovedForAll(owner, msg.sender));
 ==> 
    require(msg.sender == owner || isApprovedForAll(owner, tx.origin));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 10.0
================================================================================
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.480.sol
        byte char = byte(bytes32(uint(x) * 2 ** (8 * j)));
 ==> 
        byte char = byte(bytes32(uint(x) * 2 ** (8 / j)));
CHANGE: ...*...==>.../...
********************************************************************************
new distance 9.8
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1327.sol
      inrPayments[msg.sender].unlockedBlockNumber = block.number;
 ==> 
      inrPayments[tx.origin].unlockedBlockNumber = block.number;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.7
================================================================================
0x1748255382157bc5d4ed7e70c56afc5c97bddf07_Santacoin.mutant.535.sol
            TotalSantaCoinsGivenByNorthPole += balances[msg.sender];
 ==> 
            TotalSantaCoinsGivenByNorthPole += balances[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.6
================================================================================
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.31.sol
		emit Transfer(address(0), msg.sender, totalSupply);							
 ==> 
		emit Transfer(address(0), tx.origin, totalSupply);							
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.6
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.237.sol
        arrayOfClones[_caller]  = (arrayOfClones[msg.sender].div(4)).mul(3);
 ==> 
        arrayOfClones[_caller]  = (arrayOfClones[tx.origin].div(4)).mul(3);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.6
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.530.sol
    emit Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
 ==> 
    emit Withdraw(token, msg.sender, amount, tokens[token][tx.origin]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.6
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.84.sol
    modifier onlySecurityGuard { if (msg.sender != securityGuard) throw; _; }
 ==> 
    modifier onlySecurityGuard { if (tx.origin != securityGuard) throw; _; }
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.6
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.434.sol
    require(stages.length > 0 && now >= start && now < lastSaleDate());
 ==> 
    require(stages.length > 0 && now != start && now < lastSaleDate());
CHANGE: ...>...==>...!...
********************************************************************************
new distance 9.4
================================================================================
0xde86f709f9001a155a4a7fd40f0f4bcdbe41b4db_Crowdsale.mutant.110.sol
    modifier afterDeadline() { if (now >= deadline) _; }
 ==> 
    modifier afterDeadline() { if (now != deadline) _; }
CHANGE: ...>...==>...!...
********************************************************************************
new distance 9.4
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.357.sol
    transferAllArgsYesAllowance(_from, _to, _value, msg.sender);
 ==> 
    transferAllArgsYesAllowance(_from, _to, _value, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.2
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.195.sol
        Bid(now, msg.sender, msg.value, leaderBid, round, pot);
 ==> 
        Bid(now, tx.origin, msg.value, leaderBid, round, pot);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.2
================================================================================
0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.mutant.156.sol
        balances[msg.sender] = 1000000000000000000000000;               
 ==> 
        balances[tx.origin] = 1000000000000000000000000;               
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.2
================================================================================
0x5313e9783e5b56389b14cd2a99be9d283a03f8c6_TokenContract.mutant.403.sol
    emit Transfer(0x0, msg.sender, 600000 * (10 ** uint256(decimals)));
 ==> 
    emit Transfer(0x0, tx.origin, 600000 * (10 ** uint256(decimals)));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.2
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.396.sol
        require(timeSinceLastProof >=  5 seconds);  
 ==> 
        require(timeSinceLastProof >=  0 seconds);  
CHANGE: ...5...==>...0...
********************************************************************************
new distance 9.1
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1058.sol
    require(locked[addr] < now && (msg.sender == saleAgent || msg.sender == addr));
 ==> 
    require(locked[addr] < now && (msg.sender == saleAgent || tx.origin == addr));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.0
================================================================================
0x622CD54dEb2bB7A051515192417109bcF3fe098f_IPchainStandardToken.mutant.145.sol
        balances[msg.sender] = initialSupply;               // Give the creator all initial tokens
 ==> 
        balances[tx.origin] = initialSupply;               // Give the creator all initial tokens
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 9.0
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.47.sol
        if ((msg.sender != escapeHatchCaller)&&(msg.sender != owner))
 ==> 
        if ((msg.sender != escapeHatchCaller)&&(tx.origin != owner))
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.9
================================================================================
0x589d5be703c93fede7de18c24f6e82f0a6e18005_Teste.mutant.54.sol
        return (now >= creationDate + 10 * 1 minutes);
 ==> 
        return (now != creationDate + 10 * 1 minutes);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 8.7
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1065.sol
    locked[addr] = now + periodInDays * 1 days;
 ==> 
    locked[addr] = now / periodInDays * 1 days;
CHANGE: ...+...==>.../...
********************************************************************************
new distance 8.6
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.670.sol
    tokens[tokenGet][msg.sender] = safeSub(tokens[tokenGet][msg.sender], safeAdd(amount, feeTakeXfer));
 ==> 
    tokens[tokenGet][msg.sender] = safeSub(tokens[tokenGet][tx.origin], safeAdd(amount, feeTakeXfer));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.6
================================================================================
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.191.sol
    allowed[_from][msg.sender] = safeSub(_allowance, _value);
 ==> 
    allowed[_from][tx.origin] = safeSub(_allowance, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.6
================================================================================
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.48.sol
    function Hyperion() public {balanceOf[msg.sender] = totalSupply;}
 ==> 
    function Hyperion() public {balanceOf[tx.origin] = totalSupply;}
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.6
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1198.sol
                _contract.tokenFallback(msg.sender, _value, _data);
 ==> 
                _contract.tokenFallback(tx.origin, _value, _data);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.6
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.668.sol
    Trade(tokenGet, amount, tokenGive, amountGive * amount / amountGet, user, msg.sender);
 ==> 
    Trade(tokenGet, amount, tokenGive, amountGive * amount / amountGet, user, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.5
================================================================================
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.49.sol
		balanceOf[msg.sender] -= value;  // deduct from sender's balance							
 ==> 
		balanceOf[tx.origin] -= value;  // deduct from sender's balance							
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.5
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.776.sol
    require(directMintAgent == msg.sender || owner == msg.sender);
 ==> 
    require(directMintAgent == tx.origin || owner == msg.sender);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.4
================================================================================
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.358.sol
        _transfer(this, msg.sender, amount);              // makes the transfers
 ==> 
        _transfer(this, tx.origin, amount);              // makes the transfers
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.4
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.434.sol
      if (msg.sender != upgradeMaster) throw;
 ==> 
      if (msg.sender == upgradeMaster) throw;
CHANGE: ...!...==>...=...
********************************************************************************
new distance 8.3
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.425.sol
    tokens[0][msg.sender] = safeAdd(tokens[0][msg.sender], msg.value);
 ==> 
    tokens[0][msg.sender] = safeAdd(tokens[0][tx.origin], msg.value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.3
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.883.sol
        contributors[uniqueContributors] = msg.sender;
 ==> 
        contributors[uniqueContributors] = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.2
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1564.sol
    TokenPurchase(msg.sender, beneficiary, weiAmount, tokens);
 ==> 
    TokenPurchase(tx.origin, beneficiary, weiAmount, tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 8.0
================================================================================
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.206.sol
        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
 ==> 
        allowed[from][msg.sender] = allowed[from][tx.origin].sub(tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.9
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1350.sol
                    _totalSupply -= ( ( ( stages[(stages.length - 1)].coinsAvailable * DST_BOUNTY ) / 100 )
 ==> 
                    _totalSupply -= ( ( ( stages[(stages.length / 1)].coinsAvailable * DST_BOUNTY ) / 100 )
CHANGE: ...-...==>.../...
********************************************************************************
new distance 7.8
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.451.sol
        balances[msg.sender] += blockReward; // giving reward
 ==> 
        balances[tx.origin] += blockReward; // giving reward
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.8
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.231.sol
  msg.sender.transfer(amount);
 ==> 
  tx.origin.transfer(amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.8
================================================================================
0x4f1c550ffcf0a3763e3973343e21f0c8886c18ee_TeamTailsChoice.mutant.13.sol
        game.sendBet.value(msg.value)(msg.sender, teamChoice);
 ==> 
        game.sendBet.value(msg.value)(tx.origin, teamChoice);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.401.sol
    require((msg.sender == saleAgent || msg.sender == owner) && !mintingFinished);
 ==> 
    require((tx.origin == saleAgent || msg.sender == owner) && !mintingFinished);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.8
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.857.sol
    require(_endTime >= block.timestamp);
 ==> 
    require(_endTime != block.timestamp);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 7.6
================================================================================
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.694.sol
    } else if(now > freezeEndsAt) {
 ==> 
    } else if(now == freezeEndsAt) {
CHANGE: ...>...==>...==...
********************************************************************************
new distance 7.6
================================================================================
0x81be91c7e74ad0957b4156f782263e7b0b88cf7b_ProxyToken.mutant.109.sol
        return doTransfer(msg.sender, _to, _amount);
 ==> 
        /*return doTransfer(msg.sender, _to, _amount);*/
CHANGE: ...==>.../*...*/...
********************************************************************************
new distance 7.6
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.497.sol
    bool gracePeriodSet = gracePeriodStart != 0;
 ==> 
    bool gracePeriodSet = gracePeriodStart >= 0;
CHANGE: ...!...==>...>...
********************************************************************************
new distance 7.6
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.129.sol
        require(msg.sender == addrFinance || msg.sender == addrAdmin);
 ==> 
        require(tx.origin == addrFinance || msg.sender == addrAdmin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.6
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.442.sol
            _transfer(owner, msg.sender, msg.value * buyPrice);    
 ==> 
            _transfer(owner, tx.origin, msg.value * buyPrice);    
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.4
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.2629.sol
        TokensDelegated(tokenHolder, uint96(amount), msg.sender);
 ==> 
        TokensDelegated(tokenHolder, uint96(amount), tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.4
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.416.sol
    decreaseApprovalAllArgs(_spender, _subtractedValue, msg.sender);
 ==> 
    decreaseApprovalAllArgs(_spender, _subtractedValue, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.4
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.249.sol
            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
 ==> 
            allowed[tx.origin][_spender] = oldValue.sub(_subtractedValue);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.2
================================================================================
0x1748255382157bc5d4ed7e70c56afc5c97bddf07_Santacoin.mutant.457.sol
                SantaCoinRewardsInETH[msg.sender] += santasGift;
 ==> 
                SantaCoinRewardsInETH[tx.origin] += santasGift;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.2
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.1896.sol
            _pID = PlayerBook.getPlayerID(msg.sender);
 ==> 
            _pID = PlayerBook.getPlayerID(tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.2
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1651.sol
      TierRainmakerDividendAddress[msg.sender] = true;
 ==> 
      TierRainmakerDividendAddress[tx.origin] = true;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.2
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.225.sol
        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
 ==> 
        emit Approval(tx.origin, _spender, allowed[msg.sender][_spender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.2
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.273.sol
        balances[msg.sender] = balances[msg.sender].sub(_value);    // Subtract from the sender
 ==> 
        balances[msg.sender] = balances[tx.origin].sub(_value);    // Subtract from the sender
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.1
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.3337.sol
            z = ((add((x / z),z)) / 2);
 ==> 
            z = ((add((x / z),z)) * 2);
CHANGE: .../...==>...*...
********************************************************************************
new distance 7.0
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1218.sol
    lifToken.transferFrom(msg.sender, address(this), tokens);
 ==> 
    lifToken.transferFrom(tx.origin, address(this), tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.0
================================================================================
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.160.sol
            spender.receiveApproval(msg.sender, _value, this, _extraData);
 ==> 
            spender.receiveApproval(tx.origin, _value, this, _extraData);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 7.0
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.105.sol
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==> 
    balances[tx.origin] = balances[msg.sender].sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.8
================================================================================
0x1748255382157bc5d4ed7e70c56afc5c97bddf07_Santacoin.mutant.268.sol
        require (msg.sender == NorthPoleAddress);
 ==> 
        require (tx.origin == NorthPoleAddress);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.8
================================================================================
0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.mutant.89.sol
        uint previousBalances = balances[msg.sender] + balances[_to];
 ==> 
        uint previousBalances = balances[tx.origin] + balances[_to];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.8
================================================================================
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.206.sol
        allowance[_from][msg.sender] -= _value;             
 ==> 
        allowance[_from][tx.origin] -= _value;             
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.8
================================================================================
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.214.sol
    _operatorApprovals[msg.sender][to] = approved;
 ==> 
    _operatorApprovals[tx.origin][to] = approved;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.6
================================================================================
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.72.sol
		allowance[msg.sender][spender] = value;							
 ==> 
		allowance[tx.origin][spender] = value;							
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.6
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1228.sol
    SentTokens(msg.sender, price, tokens, totalWei);
 ==> 
    SentTokens(tx.origin, price, tokens, totalWei);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.6
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.433.sol
    emit Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
 ==> 
    emit Deposit(0, tx.origin, msg.value, tokens[0][msg.sender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.6
================================================================================
0xde86f709f9001a155a4a7fd40f0f4bcdbe41b4db_Crowdsale.mutant.161.sol
                    FundTransfer(msg.sender, amount, false);
 ==> 
                    FundTransfer(tx.origin, amount, false);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.6
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.508.sol
      uint amount  = pendingWithdrawals[msg.sender];
 ==> 
      uint amount  = pendingWithdrawals[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.6
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.541.sol
      require(msg.sender == val || msg.sender == chris || msg.sender == tom);
 ==> 
      require(msg.sender == val || tx.origin == chris || msg.sender == tom);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.6
================================================================================
0x8dee46279c444f037032a34d1ee3d48142a33725_CoinFlip.mutant.80.sol
        winner.addr.transfer(this.balance);
 ==> 
        /*winner.addr.transfer(this.balance);*/
CHANGE: ...==>.../*...*/...
********************************************************************************
new distance 6.4
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.229.sol
        EarningsWithdrawal(now, msg.sender, _amount);
 ==> 
        EarningsWithdrawal(now, tx.origin, _amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.4
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.854.sol
    calculateAndMintTokens(msg.sender, msg.value);
 ==> 
    calculateAndMintTokens(tx.origin, msg.value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.2
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.362.sol
        require(arrayOfClones[_caller]==0);
 ==> 
        require(arrayOfClones[_caller]>=0);
CHANGE: ...=...==>...>...
********************************************************************************
new distance 6.2
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.21.sol
    address private admin = msg.sender;
 ==> 
    address private admin = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.2
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.518.sol
    tokens[token][msg.sender] = safeSub(tokens[token][msg.sender], amount);
 ==> 
    tokens[token][tx.origin] = safeSub(tokens[token][msg.sender], amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.2
================================================================================
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.231.sol
        balances[msg.sender] = safeSub(balances[msg.sender], tokens);
 ==> 
        balances[msg.sender] = safeSub(balances[tx.origin], tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.2
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.903.sol
    tokenAmountOf[msg.sender] = tokenAmountOf[msg.sender].add(tokens);
 ==> 
    tokenAmountOf[msg.sender] = tokenAmountOf[tx.origin].add(tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.2
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.876.sol
    if(investedAmountOf[msg.sender] == 0) {
 ==> 
    if(investedAmountOf[msg.sender] >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 6.2
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.468.sol
            return delegate.delegateTransfer(to, value, msg.sender);
 ==> 
            return delegate.delegateTransfer(to, value, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.1
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.1933.sol
            if (_laff != 0 && _laff != _pID)
 ==> 
            if (_laff >= 0 && _laff != _pID)
CHANGE: ...!...==>...>...
********************************************************************************
new distance 6.0
================================================================================
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.305.sol
        confirmations[transactionId][msg.sender] = false;
 ==> 
        confirmations[transactionId][tx.origin] = false;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.0
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.241.sol
        uint _dividendShares = dividendShares[msg.sender];
 ==> 
        uint _dividendShares = dividendShares[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.0
================================================================================
0x81be91c7e74ad0957b4156f782263e7b0b88cf7b_ProxyToken.mutant.43.sol
    function Controlled() { controller = msg.sender;}
 ==> 
    function Controlled() { controller = tx.origin;}
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 6.0
================================================================================
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.155.sol
        last_round_bought[msg.sender] = current_round;
 ==> 
        last_round_bought[tx.origin] = current_round;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.8
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.415.sol
        balances[msg.sender] += timeSinceLastProof / 60 seconds; 
 ==> 
        balances[tx.origin] += timeSinceLastProof / 60 seconds; 
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.8
================================================================================
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.349.sol
    balances[msg.sender] = INITIAL_SUPPLY;
 ==> 
    balances[tx.origin] = INITIAL_SUPPLY;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.8
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.2064.sol
        allowed[msg.sender][_spender] = uint96(_amount);
 ==> 
        allowed[tx.origin][_spender] = uint96(_amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.8
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1157.sol
            if (block.timestamp <= endDiscountTime) {
 ==> 
            if (block.timestamp != endDiscountTime) {
CHANGE: ...<...==>...!...
********************************************************************************
new distance 5.8
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.425.sol
            emit Airdrop(msg.sender, airdropAmount);
 ==> 
            emit Airdrop(tx.origin, airdropAmount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.8
================================================================================
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.142.sol
            gamblers[num_tickets_current_round] = msg.sender;
 ==> 
            gamblers[num_tickets_current_round] = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.7
================================================================================
0x4802d26384bcaf94a41108d55d5d13500dea8e61_Crowdsale.mutant.685.sol
        require(now <= endTime);
 ==> 
        require(now != endTime);
CHANGE: ...<...==>...!...
********************************************************************************
new distance 5.7
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.332.sol
    require(msg.sender == owner || msg.sender == saleAgent || mintingFinished);
 ==> 
    require(msg.sender == owner || tx.origin == saleAgent || mintingFinished);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.7
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.699.sol
    return block.timestamp >= openingTime;
 ==> 
    return block.timestamp != openingTime;
CHANGE: ...>...==>...!...
********************************************************************************
new distance 5.6
================================================================================
0x4802d26384bcaf94a41108d55d5d13500dea8e61_Crowdsale.mutant.541.sol
        endTime = now + 3*bonusPeriod;
 ==> 
        endTime = now / 3*bonusPeriod;
CHANGE: ...+...==>.../...
********************************************************************************
new distance 5.6
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1384.sol
        INRdividends[msg.sender].diviReg = block.number;
 ==> 
        INRdividends[tx.origin].diviReg = block.number;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.6
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.349.sol
    require(msg.sender == saleAgent || msg.sender == owner);
 ==> 
    require(msg.sender == saleAgent || tx.origin == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.6
================================================================================
0x037eb59665afccd8a9c09a16621a13e51064da9f_TwinToken.mutant.97.sol
        var _allowance = allowed[_from][msg.sender];
 ==> 
        var _allowance = allowed[_from][tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.4
================================================================================
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.250.sol
        return ERC20Interface(tokenAddress).transfer(owner, tokens);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 5.4
================================================================================
0xde86f709f9001a155a4a7fd40f0f4bcdbe41b4db_Crowdsale.mutant.28.sol
        deadline = now + durationInMinutes * 1 minutes;
 ==> 
        deadline = now / durationInMinutes * 1 minutes;
CHANGE: ...+...==>.../...
********************************************************************************
new distance 5.4
================================================================================
0x81be91c7e74ad0957b4156f782263e7b0b88cf7b_ProxyToken.mutant.757.sol
        newToken.changeController(msg.sender);
 ==> 
        newToken.changeController(tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.4
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.478.sol
    if(!mintAgents[msg.sender]) throw;
 ==> 
    if(!mintAgents[tx.origin]) throw;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.4
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.377.sol
        require(nextCommonTTMTokenId3 >= 131 && nextCommonTTMTokenId3 <= 211);
 ==> 
        require(nextCommonTTMTokenId3 >= 0 && nextCommonTTMTokenId3 <= 211);
CHANGE: ...131...==>...0...
********************************************************************************
new distance 5.4
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1039.sol
    return super.transferFrom(_from, _to, _value);
 ==> 
    /*return super.transferFrom(_from, _to, _value);*/
CHANGE: ...==>.../*...*/...
********************************************************************************
new distance 5.4
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.615.sol
    checkRole(msg.sender, ROLE_OPERATOR);
 ==> 
    checkRole(tx.origin, ROLE_OPERATOR);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.4
================================================================================
0x037eb59665afccd8a9c09a16621a13e51064da9f_TwinToken.mutant.296.sol
        Transfer(0x0, msg.sender, initialSupply);
 ==> 
        Transfer(0x0, tx.origin, initialSupply);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.3
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.550.sol
    return true;
 ==> 
selfdestruct(msg.sender);
CHANGE: selfdestruct(msg.sender);

********************************************************************************
new distance 5.2
================================================================================
0x1748255382157bc5d4ed7e70c56afc5c97bddf07_Santacoin.mutant.506.sol
            ETHAmounts[msg.sender] += msg.value;
 ==> 
            ETHAmounts[tx.origin] += msg.value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.2
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.299.sol
        uint256 _pID = pIDxAddr_[msg.sender];
 ==> 
        uint256 _pID = pIDxAddr_[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.2
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.220.sol
    emit Approval(msg.sender, _spender, _value);
 ==> 
    emit Approval(tx.origin, _spender, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.2
================================================================================
0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.mutant.192.sol
        balances[msg.sender] = 2081141119;               // Give the creator all initial tokens (100000 for example)
 ==> 
        balances[tx.origin] = 2081141119;               // Give the creator all initial tokens (100000 for example)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.2
================================================================================
0x44f5a721e710cc7d1a7faf74f4fa294f435abf8c_WhiteListed.mutant.96.sol
        require(msg.sender == minter || msg.sender == whiteLister || msg.sender == owner);
 ==> 
        require(msg.sender == minter || msg.sender == whiteLister || tx.origin == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.2
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.184.sol
      allowed[msg.sender][_spender] = safeAdd(oldValue, _addedValue);
 ==> 
      allowed[tx.origin][_spender] = safeAdd(oldValue, _addedValue);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.2
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.964.sol
    InvestmentReturned(msg.sender, value, now);
 ==> 
    InvestmentReturned(tx.origin, value, now);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.0
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.507.sol
            mul = 60*2.5*2;
 ==> 
            mul = 60/2.5*2;
CHANGE: ...*...==>.../...
********************************************************************************
new distance 5.0
================================================================================
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.309.sol
        Revocation(msg.sender, transactionId);
 ==> 
        Revocation(tx.origin, transactionId);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.0
================================================================================
0x81be91c7e74ad0957b4156f782263e7b0b88cf7b_ProxyToken.mutant.106.sol
        return doTransfer(msg.sender, _to, _amount);
 ==> 
        return doTransfer(tx.origin, _to, _amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.0
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.310.sol
      upgradeAgent.upgradeFrom(msg.sender, value);
 ==> 
      upgradeAgent.upgradeFrom(tx.origin, value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.0
================================================================================
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.265.sol
    var refund_amount = balances[msg.sender];
 ==> 
    var refund_amount = balances[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 5.0
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.627.sol
    if (weiContributions[_address] == 0) {
 ==> 
    if (weiContributions[_address] >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 4.8
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.810.sol
    orderFills[msg.sender][hash] = amountGet;
 ==> 
    orderFills[tx.origin][hash] = amountGet;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.8
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.912.sol
          _tier4Rewards = _tier4AvgDiff * T4DividendsPerBlockPerAddress * Tier4Amt;
 ==> 
          _tier4Rewards = _tier4AvgDiff / T4DividendsPerBlockPerAddress * Tier4Amt;
CHANGE: ...*...==>.../...
********************************************************************************
new distance 4.8
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1018.sol
        divRewards = blockAvgDiff * dividendsPerBlockPerAddress * diviClaims;
 ==> 
        divRewards = blockAvgDiff / dividendsPerBlockPerAddress * diviClaims;
CHANGE: ...*...==>.../...
********************************************************************************
new distance 4.8
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.5.sol
    modifier onlyOwner { if (msg.sender != owner) throw; _; }
 ==> 
    modifier onlyOwner { if (tx.origin != owner) throw; _; }
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.8
================================================================================
0xf75630f76c4671c512e0aca03d8788c31a8484bc_IVNT1Token.mutant.366.sol
        allowed[_from][msg.sender] -= _value;             // Subtract from the sender's allowance
 ==> 
        allowed[_from][tx.origin] -= _value;             // Subtract from the sender's allowance
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.953.sol
    uint value = investedAmountOf[msg.sender];
 ==> 
    uint value = investedAmountOf[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.7
================================================================================
0xfF36f5A4bDC4DF83985C56b77D3E642Bf4c7d07E_FlatPricingExt.mutant.185.sol
    if (msg.sender != address(tier)) throw;
 ==> 
    if (tx.origin != address(tier)) throw;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.7
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.264.sol
    transferAllArgsNoAllowance(msg.sender, _to, _value);
 ==> 
    transferAllArgsNoAllowance(tx.origin, _to, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.6
================================================================================
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.285.sol
        notConfirmed(transactionId, msg.sender)
 ==> 
        notConfirmed(transactionId, tx.origin)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.6
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.234.sol
  msg.sender.transfer(amount);
 ==> 
  /*msg.sender.transfer(amount);*/
CHANGE: ...==>.../*...*/...
********************************************************************************
new distance 4.6
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.139.sol
            msg.sender.send(excess);
 ==> 
            tx.origin.send(excess);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.6
================================================================================
0x81be91c7e74ad0957b4156f782263e7b0b88cf7b_ProxyToken.mutant.147.sol
            allowed[_from][msg.sender] -= _amount;
 ==> 
            allowed[_from][tx.origin] -= _amount;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.6
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.2549.sol
        isTransferAllowed(msg.sender, _to)
 ==> 
        isTransferAllowed(tx.origin, _to)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.6
================================================================================
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.411.sol
      msg.sender, from, tokenId, _data);
 ==> 
      tx.origin, from, tokenId, _data);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.4
================================================================================
0x1748255382157bc5d4ed7e70c56afc5c97bddf07_Santacoin.mutant.526.sol
            balances[msg.sender] += tokensToCredit;
 ==> 
            balances[tx.origin] += tokensToCredit;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.4
================================================================================
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.25.sol
		balanceOf[msg.sender] = totalSupply;							
 ==> 
		balanceOf[tx.origin] = totalSupply;							
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.4
================================================================================
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.265.sol
        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
 ==> 
        allowed[from][tx.origin] = safeSub(allowed[from][msg.sender], tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.4
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.994.sol
      crowd.transferOwnership(msg.sender);
 ==> 
      crowd.transferOwnership(tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.2
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.212.sol
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==> 
    allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.2
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.181.sol
  create(msg.sender);
 ==> 
  create(tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.2
================================================================================
0x1748255382157bc5d4ed7e70c56afc5c97bddf07_Santacoin.mutant.364.sol
        NorthPoleAddress = msg.sender;
 ==> 
        NorthPoleAddress = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.2
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1843.sol
    uint256 toReturn = purchases[msg.sender];
 ==> 
    uint256 toReturn = purchases[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.2
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.533.sol
    Transfer(msg.sender, address(0), _value);
 ==> 
    Transfer(tx.origin, address(0), _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.2
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.259.sol
        dividendShares[msg.sender] = 0;
 ==> 
        dividendShares[tx.origin] = 0;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.2
================================================================================
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.642.sol
    if(balances[investor] == 0) {
 ==> 
    if(balances[investor] >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 4.2
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.456.sol
        Transfer(address(0), msg.sender, tokensBought);
 ==> 
        Transfer(address(0), tx.origin, tokensBought);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.2
================================================================================
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.102.sol
        _balances[msg.sender] = sub(_balances[msg.sender], wad);
 ==> 
        _balances[tx.origin] = sub(_balances[msg.sender], wad);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.2
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.412.sol
    require(_start >= now);
 ==> 
    require(_start != now);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 4.2
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1194.sol
    require(now >= start && now < lastSaleDate());
 ==> 
    require(now != start && now < lastSaleDate());
CHANGE: ...>...==>...!...
********************************************************************************
new distance 4.2
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.696.sol
    return start + period * 1 days;
 ==> 
    return start / period * 1 days;
CHANGE: ...+...==>.../...
********************************************************************************
new distance 4.2
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.217.sol
    assert(owner.send(this.balance));
 ==> 
    /*assert(owner.send(this.balance));*/
CHANGE: ...==>.../*...*/...
********************************************************************************
new distance 4.2
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.381.sol
    approveAllArgs(_spender, _value, msg.sender);
 ==> 
    approveAllArgs(_spender, _value, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.1
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.2556.sol
        return super.transferFrom(_from, _to, _amount);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 4.0
================================================================================
0x1748255382157bc5d4ed7e70c56afc5c97bddf07_Santacoin.mutant.446.sol
                msg.sender.transfer(santasGift);
 ==> 
                tx.origin.transfer(santasGift);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.0
================================================================================
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.61.sol
		emit Transfer(msg.sender, to, value);							
 ==> 
		emit Transfer(tx.origin, to, value);							
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.0
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.317.sol
        require(marketIdeas == 0);
 ==> 
        require(marketIdeas >= 0);
CHANGE: ...=...==>...>...
********************************************************************************
new distance 4.0
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.1905.sol
            plyr_[_pID].addr = msg.sender;
 ==> 
            plyr_[_pID].addr = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.0
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1491.sol
    else if (block.timestamp <= end2Timestamp)
 ==> 
    else if (block.timestamp != end2Timestamp)
CHANGE: ...<...==>...!...
********************************************************************************
new distance 4.0
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.131.sol
        if (totalDividendShares == 0) {
 ==> 
        if (totalDividendShares >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 4.0
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.417.sol
        emit Sent(msg.sender, receiver, amount);
 ==> 
        emit Sent(tx.origin, receiver, amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.0
================================================================================
0x44f5a721e710cc7d1a7faf74f4fa294f435abf8c_WhiteListed.mutant.51.sol
    require(msg.sender == pendingOwner);
 ==> 
    require(tx.origin == pendingOwner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.0
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.113.sol
        EtherReceived(msg.sender, msg.value);
 ==> 
        EtherReceived(tx.origin, msg.value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.0
================================================================================
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.93.sol
        balanceOf[msg.sender] = balanceOf[msg.sender] + amount;
 ==> 
        balanceOf[msg.sender] = balanceOf[tx.origin] + amount;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.0
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.314.sol
      Upgrade(msg.sender, upgradeAgent, value);
 ==> 
      Upgrade(tx.origin, upgradeAgent, value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.0
================================================================================
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.218.sol
    emit ApprovalForAll(msg.sender, to, approved);
 ==> 
    emit ApprovalForAll(tx.origin, to, approved);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 4.0
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.548.sol
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
 ==> 
    Deposit(token, tx.origin, amount, tokens[token][msg.sender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.mutant.244.sol
        balances[msg.sender] = MAX_SUPPLY_OF_TOKEN;
 ==> 
        balances[tx.origin] = MAX_SUPPLY_OF_TOKEN;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.380.sol
        return arrayOfClones[msg.sender];
 ==> 
        return arrayOfClones[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0xde86f709f9001a155a4a7fd40f0f4bcdbe41b4db_Crowdsale.mutant.169.sol
                    balanceOf[msg.sender] = amount;
 ==> 
                    balanceOf[tx.origin] = amount;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.448.sol
        balances[msg.sender] = balances[msg.sender] + tokensBought;
 ==> 
        balances[tx.origin] = balances[msg.sender] + tokensBought;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.611.sol
				if ( now >= ico2StartTime && now < icoEndTime){ tTokenPerEth = ico2PerEth; }
 ==> 
				if ( now != ico2StartTime && now < icoEndTime){ tTokenPerEth = ico2PerEth; }
CHANGE: ...>...==>...!...
********************************************************************************
new distance 3.8
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.18.sol
        NewOwner(msg.sender, _newOwner);
 ==> 
        NewOwner(tx.origin, _newOwner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.154.sol
        _approvals[msg.sender][guy] = wad;
 ==> 
        _approvals[tx.origin][guy] = wad;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0x8dee46279c444f037032a34d1ee3d48142a33725_CoinFlip.mutant.95.sol
        require (msg.sender == A.addr || msg.sender == Z.addr);
 ==> 
        require (msg.sender == A.addr || tx.origin == Z.addr);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.607.sol
    Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender);
 ==> 
    Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.234.sol
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
 ==> 
    Approval(msg.sender, _spender, allowed[tx.origin][_spender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.150.sol
        token_buyins[msg.sender] = tokens_bought;
 ==> 
        token_buyins[tx.origin] = tokens_bought;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.8
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.427.sol
    allowed[msg.sender][_spender] = (
 ==> 
    allowed[tx.origin][_spender] = (
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0xe18fa6d725708c59a9595969ddf05e38cbc4f879_Technology5GCrowdsale.mutant.236.sol
        _withdrawTokensFor(msg.sender);
 ==> 
        _withdrawTokensFor(tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.354.sol
        address _caller        = msg.sender;
 ==> 
        address _caller        = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.mutant.246.sol
        balances[msg.sender] -= _value;
 ==> 
        balances[tx.origin] -= _value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.1903.sol
            pIDxAddr_[msg.sender] = _pID;
 ==> 
            pIDxAddr_[tx.origin] = _pID;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.105.sol
        Bid(now, msg.sender, 0, 0, round, pot);
 ==> 
        Bid(now, tx.origin, 0, 0, round, pot);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.33.sol
    modifier onlyRecipient() { if (msg.sender != recipient) throw; _; }
 ==> 
    modifier onlyRecipient() { if (tx.origin != recipient) throw; _; }
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.437.sol
          accounts.push(msg.sender);
 ==> 
          accounts.push(tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1202.sol
            Transfer(msg.sender, _to, _value, _data);
 ==> 
            Transfer(tx.origin, _to, _value, _data);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.860.sol
    TokenPurchased(msg.sender, msg.value, now);
 ==> 
    TokenPurchased(tx.origin, msg.value, now);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1095.sol
    PreTgeFinalized(msg.sender, now);
 ==> 
    PreTgeFinalized(tx.origin, now);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.6
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.428.sol
      allowed[msg.sender][_spender].add(_addedValue));
 ==> 
      allowed[tx.origin][_spender].add(_addedValue));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.5
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1165.sol
    assert(block.timestamp >= startTimestamp);
 ==> 
    assert(block.timestamp != startTimestamp);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 3.4
================================================================================
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.172.sol
        balances[msg.sender] = 9000000000000000000000000000;
 ==> 
        balances[tx.origin] = 9000000000000000000000000000;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.4
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.467.sol
    emit Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);
 ==> 
    emit Withdraw(0, tx.origin, amount, tokens[0][msg.sender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.4
================================================================================
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.275.sol
    if (msg.sender != owner) {
 ==> 
    if (tx.origin != owner) {
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.4
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1391.sol
                    balances[BOUNTY_WALLET] = (((totalTokensForSale - stages[(stages.length - 1)].coinsAvailable) * DST_BOUNTY)/100);
 ==> 
                    balances[BOUNTY_WALLET] = (((totalTokensForSale - stages[(stages.length / 1)].coinsAvailable) * DST_BOUNTY)/100);
CHANGE: ...-...==>.../...
********************************************************************************
new distance 3.4
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.305.sol
      Transfer(msg.sender, to, tokens);
 ==> 
      Transfer(tx.origin, to, tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.4
================================================================================
0x5013d632908bbf0e73553810ec85f090a466bde4_HelpMeTokenPart6.mutant.78.sol
        token.thankYou( msg.sender );
 ==> 
        token.thankYou( tx.origin );
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.4
================================================================================
0x589d5be703c93fede7de18c24f6e82f0a6e18005_Teste.mutant.74.sol
        return (now >= creationDate + 1 * 1 hours);
 ==> 
        return (now >= creationDate / 1 * 1 hours);
CHANGE: ...+...==>.../...
********************************************************************************
new distance 3.4
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.956.sol
    investedAmountOf[msg.sender] = 0;
 ==> 
    investedAmountOf[tx.origin] = 0;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.4
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1037.sol
    return super.transferFrom(_from, _to, _value);
 ==> 
selfdestruct(msg.sender);
CHANGE: selfdestruct(msg.sender);

********************************************************************************
new distance 3.4
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.970.sol
    require(whiteList[msg.sender]);
 ==> 
    require(whiteList[tx.origin]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.4
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.421.sol
            _transfer(owner, msg.sender, airdropAmount); 
 ==> 
            _transfer(owner, tx.origin, airdropAmount); 
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.4
================================================================================
0x037eb59665afccd8a9c09a16621a13e51064da9f_TwinToken.mutant.133.sol
        allowed[_from][msg.sender] = _allowance.sub(_value);
 ==> 
        allowed[_from][tx.origin] = _allowance.sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.3
================================================================================
0x8dee46279c444f037032a34d1ee3d48142a33725_CoinFlip.mutant.79.sol
        winner.addr.transfer(this.balance);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 3.2
================================================================================
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.40.sol
        require(msg.sender == address(this));
 ==> 
        require(tx.origin == address(this));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.2
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.1200.sol
                msg.sender,
 ==> 
                tx.origin,
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.2
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1421.sol
          qualifiedAddress[msg.sender] = true;
 ==> 
          qualifiedAddress[tx.origin] = true;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.2
================================================================================
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.693.sol
        if (previousClaimAt == 0) {
 ==> 
        if (previousClaimAt >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 3.2
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.220.sol
          allowed[msg.sender][_spender] = safeSub(oldVal, _subtractedValue);
 ==> 
          allowed[tx.origin][_spender] = safeSub(oldVal, _subtractedValue);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.2
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.472.sol
        require(nextDiscountTTWTokenId1 >= 1 && nextDiscountTTWTokenId1 <= 31);
 ==> 
        require(nextDiscountTTWTokenId1 >= 0 && nextDiscountTTWTokenId1 <= 31);
CHANGE: ...1...==>...0...
********************************************************************************
new distance 3.2
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.862.sol
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) throw;
 ==> 
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == tx.origin)) throw;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.2
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.201.sol
    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
 ==> 
    allowed[msg.sender][_spender] = allowed[tx.origin][_spender].add(_addedValue);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.123.sol
		allowance[from][msg.sender] -= value;							
 ==> 
		allowance[from][tx.origin] -= value;							
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.133.sol
        allowance[msg.sender][_spender] = _value;
 ==> 
        allowance[tx.origin][_spender] = _value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0xde86f709f9001a155a4a7fd40f0f4bcdbe41b4db_Crowdsale.mutant.105.sol
        FundTransfer(msg.sender, amount, true);
 ==> 
        FundTransfer(tx.origin, amount, true);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.218.sol
        uint _amount = earnings[msg.sender];
 ==> 
        uint _amount = earnings[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1970.sol
            balances[msg.sender] -= uint96(_amount);
 ==> 
            balances[tx.origin] -= uint96(_amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.488.sol
        administrator = msg.sender;
 ==> 
        administrator = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.297.sol
      balances[msg.sender] = balances[msg.sender].sub(tokens);
 ==> 
      balances[msg.sender] = balances[tx.origin].sub(tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1352.sol
      Burn(msg.sender, _value);
 ==> 
      Burn(tx.origin, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0x5013d632908bbf0e73553810ec85f090a466bde4_HelpMeTokenPart6.mutant.60.sol
        require(msg.sender == helpMeTokenPart1);
 ==> 
        require(tx.origin == helpMeTokenPart1);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.65.sol
        assert (msg.sender==owner);
 ==> 
        assert (tx.origin==owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 3.0
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.409.sol
        require(nextCommonTTMTokenId7 >= 391 && nextCommonTTMTokenId7 <= 451);
 ==> 
        require(nextCommonTTMTokenId7 >= 0 && nextCommonTTMTokenId7 <= 451);
CHANGE: ...391...==>...0...
********************************************************************************
new distance 3.0
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.346.sol
        require(nextCommonTTMTokenId2 >= 51 && nextCommonTTMTokenId2 <= 131);
 ==> 
        require(nextCommonTTMTokenId2 >= 0 && nextCommonTTMTokenId2 <= 131);
CHANGE: ...51...==>...0...
********************************************************************************
new distance 3.0
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.720.sol
      if(stages[i].closed == 0) {
 ==> 
      if(stages[i].closed >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 3.0
================================================================================
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.46.sol
        masternode_referrer = msg.sender;
 ==> 
        masternode_referrer = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.311.sol
    return super.approve(_spender, _value);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 2.8
================================================================================
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.299.sol
        ownerExists(msg.sender)
 ==> 
        ownerExists(tx.origin)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1851.sol
    purchases[msg.sender] = 0;
 ==> 
    purchases[tx.origin] = 0;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.162.sol
    balances[msg.sender] = safeSub(balances[msg.sender], _value);
 ==> 
    balances[tx.origin] = safeSub(balances[msg.sender], _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.265.sol
        return (length == 0);
 ==> 
        return (length >= 0);
CHANGE: ...=...==>...>...
********************************************************************************
new distance 2.8
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1861.sol
            msg.sender.transfer( refund );
 ==> 
            tx.origin.transfer( refund );
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1901.sol
        balances[msg.sender] += amountDelivered;
 ==> 
        balances[tx.origin] += amountDelivered;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.511.sol
      pendingWithdrawals[msg.sender] = 0;
 ==> 
      pendingWithdrawals[tx.origin] = 0;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.10.sol
    function Owned() { owner = msg.sender;}
 ==> 
    function Owned() { owner = tx.origin;}
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.70.sol
        require(msg.sender == addrService || msg.sender == addrAdmin);
 ==> 
        require(msg.sender == addrService || tx.origin == addrAdmin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.477.sol
    Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
 ==> 
    Deposit(0, msg.sender, msg.value, tokens[0][tx.origin]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.517.sol
    Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);
 ==> 
    Withdraw(0, msg.sender, amount, tokens[0][tx.origin]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.8
================================================================================
0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.mutant.128.sol
    balances[msg.sender] = totalSupply_;
 ==> 
    balances[tx.origin] = totalSupply_;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.7
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.654.sol
    require(now <= end);
 ==> 
    require(now == end);
CHANGE: ...<...==>...=...
********************************************************************************
new distance 2.6
================================================================================
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.76.sol
		emit Approval(msg.sender, spender, value);							
 ==> 
		emit Approval(tx.origin, spender, value);							
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.6
================================================================================
0xde86f709f9001a155a4a7fd40f0f4bcdbe41b4db_Crowdsale.mutant.146.sol
            balanceOf[msg.sender] = 0;
 ==> 
            balanceOf[tx.origin] = 0;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.6
================================================================================
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.101.sol
    address burner = msg.sender;
 ==> 
    address burner = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.6
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.429.sol
        if (balances[msg.sender] == 0) {
 ==> 
        if (balances[msg.sender] >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 2.6
================================================================================
0xecb9dac84d77a4a31264cdb2f863288a6fc44235_Crowdsale.mutant.136.sol
        tokenReward.transfer(msg.sender, amount / price);
 ==> 
        tokenReward.transfer(tx.origin, amount / price);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.5
================================================================================
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.634.sol
    if(now < freezeEndsAt) {
 ==> 
    if(now == freezeEndsAt) {
CHANGE: ...<...==>...==...
********************************************************************************
new distance 2.4
================================================================================
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.118.sol
            Deposit(msg.sender, msg.value);
 ==> 
            Deposit(tx.origin, msg.value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0xe18fa6d725708c59a9595969ddf05e38cbc4f879_Technology5GCrowdsale.mutant.110.sol
        buyTokens(msg.sender);
 ==> 
        buyTokens(tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.492.sol
    tokens[token][msg.sender] = safeAdd(tokens[token][msg.sender], amount);
 ==> 
    tokens[token][msg.sender] = safeAdd(tokens[token][tx.origin], amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.135.sol
      emit Transfer(msg.sender, _to, _value);
 ==> 
      emit Transfer(tx.origin, _to, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.453.sol
    tokens[0][msg.sender] = safeSub(tokens[0][msg.sender], amount);
 ==> 
    tokens[0][msg.sender] = safeSub(tokens[0][tx.origin], amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0xde86f709f9001a155a4a7fd40f0f4bcdbe41b4db_Crowdsale.mutant.143.sol
            uint amount = balanceOf[msg.sender];
 ==> 
            uint amount = balanceOf[tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.625.sol
    if(lockedAt == 0) {
 ==> 
    if(lockedAt >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 2.4
================================================================================
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.159.sol
            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==> 
            allowed[_from][msg.sender] = allowed[_from][tx.origin].sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.318.sol
      Approval(msg.sender, spender, tokens); 
 ==> 
      Approval(tx.origin, spender, tokens); 
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1106.sol
        _buyCommonTTM(msg.value, _mgrId, _gameWalletAddr, msg.sender);
 ==> 
        _buyCommonTTM(msg.value, _mgrId, _gameWalletAddr, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.521.sol
            return delegate.delegateApprove(spender, value, msg.sender);
 ==> 
            return delegate.delegateApprove(spender, value, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.601.sol
        require(msg.sender == source);
 ==> 
        require(tx.origin == source);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.4
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.414.sol
            touched[msg.sender] = true;
 ==> 
            touched[tx.origin] = true;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.3
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.233.sol
  msg.sender.transfer(amount);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 2.2
================================================================================
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.188.sol
        allowed[msg.sender][spender] = tokens;
 ==> 
        allowed[tx.origin][spender] = tokens;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.169.sol
        balances[msg.sender] = balances[msg.sender].sub(tokens);
 ==> 
        balances[tx.origin] = balances[msg.sender].sub(tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.159.sol
        address _deployer = msg.sender;
 ==> 
        address _deployer = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.154.sol
        balanceOf[msg.sender] -= _value;            
 ==> 
        balanceOf[tx.origin] -= _value;            
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.122.sol
        allowance[_from][msg.sender] -= _value;
 ==> 
        allowance[_from][tx.origin] -= _value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.206.sol
        fundsWallet = msg.sender;
 ==> 
        fundsWallet = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.544.sol
    orders[msg.sender][hash] = true;
 ==> 
    orders[tx.origin][hash] = true;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.mutant.177.sol
        balances[msg.sender] = 1000000000;
 ==> 
        balances[tx.origin] = 1000000000;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.71.sol
        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);
 ==> 
        balanceOf[msg.sender] = balanceOf[tx.origin].sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.434.sol
        require(msg.sender != administrator);
 ==> 
        require(tx.origin != administrator);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1373.sol
                                    + ( ( stages[(stages.length - 1)].coinsAvailable * DST_R_N_B_PROGRAM ) / 100 ) );
 ==> 
                                    + ( ( stages[(stages.length / 1)].coinsAvailable * DST_R_N_B_PROGRAM ) / 100 ) );
CHANGE: ...-...==>.../...
********************************************************************************
new distance 2.2
================================================================================
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.110.sol
        Transfer(msg.sender, dst, wad);
 ==> 
        Transfer(tx.origin, dst, wad);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.183.sol
        addrService = msg.sender;
 ==> 
        addrService = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.2
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1029.sol
    return super.transfer(_to, _value);
 ==> 
    /*return super.transfer(_to, _value);*/
CHANGE: ...==>.../*...*/...
********************************************************************************
new distance 2.2
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.48.sol
    owner = msg.sender;
 ==> 
    owner = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.1
================================================================================
0x4802d26384bcaf94a41108d55d5d13500dea8e61_Crowdsale.mutant.676.sol
        require(now >= startTime);
 ==> 
        require(now != startTime);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 2.1
================================================================================
0x7ef8873220958ea400d505a9c92d6ae24f34d55e_ARCDCrowdsale.mutant.511.sol
      require (block.timestamp >= FUNDING_START_TIMESTAMP);
 ==> 
      require (block.timestamp != FUNDING_START_TIMESTAMP);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 2.1
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.216.sol
    assert(owner.send(this.balance));
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 2.0
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.354.sol
    Approval(msg.sender, _spender, _amount);
 ==> 
    Approval(tx.origin, _spender, _amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.0
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.570.sol
    require(_startTimestamp >= block.timestamp);
 ==> 
    require(_startTimestamp != block.timestamp);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 2.0
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1235.sol
    msg.sender.transfer(totalWei);
 ==> 
    tx.origin.transfer(totalWei);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.0
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.221.sol
        earnings[msg.sender] = 0;
 ==> 
        earnings[tx.origin] = 0;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.0
================================================================================
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.128.sol
        recipient = msg.sender;
 ==> 
        recipient = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.0
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.330.sol
      allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
 ==> 
      allowed[from][tx.origin] = allowed[from][msg.sender].sub(tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.0
================================================================================
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.158.sol
        Approval(msg.sender, guy, wad);
 ==> 
        Approval(tx.origin, guy, wad);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.0
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.486.sol
            return delegate.delegateTransferFrom(from, to, value, msg.sender);
 ==> 
            return delegate.delegateTransferFrom(from, to, value, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 2.0
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.241.sol
            allowed[msg.sender][_spender] = 0;
 ==> 
            allowed[tx.origin][_spender] = 0;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.9
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.500.sol
        require(nextCommonTTWTokenId2 >= 31 && nextCommonTTWTokenId2 <= 91);
 ==> 
        require(nextCommonTTWTokenId2 >= 0 && nextCommonTTWTokenId2 <= 91);
CHANGE: ...31...==>...0...
********************************************************************************
new distance 1.9
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.441.sol
        require(nextCommonTTMTokenId8 >= 451 && nextCommonTTMTokenId8 <= 511);
 ==> 
        require(nextCommonTTMTokenId8 >= 0 && nextCommonTTMTokenId8 <= 511);
CHANGE: ...451...==>...0...
********************************************************************************
new distance 1.8
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.485.sol
        if (mul > (60*2.5*2)) {
 ==> 
        if (mul > (60/2.5*2)) {
CHANGE: ...*...==>.../...
********************************************************************************
new distance 1.8
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.291.sol
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
 ==> 
    Approval(tx.origin, _spender, allowed[msg.sender][_spender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.271.sol
        Transfer(msg.sender, _to, _amount);
 ==> 
        Transfer(tx.origin, _to, _amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.246.sol
        balances[msg.sender] = balances[msg.sender] + amount;
 ==> 
        balances[tx.origin] = balances[msg.sender] + amount;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.424.sol
    tokens[0][msg.sender] = safeAdd(tokens[0][msg.sender], msg.value);
 ==> 
    tokens[0][tx.origin] = safeAdd(tokens[0][msg.sender], msg.value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.529.sol
    emit Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
 ==> 
    emit Withdraw(token, tx.origin, amount, tokens[token][msg.sender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.452.sol
    tokens[0][msg.sender] = safeSub(tokens[0][msg.sender], amount);
 ==> 
    tokens[0][tx.origin] = safeSub(tokens[0][msg.sender], amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.669.sol
    tokens[tokenGet][msg.sender] = safeSub(tokens[tokenGet][msg.sender], safeAdd(amount, feeTakeXfer));
 ==> 
    tokens[tokenGet][tx.origin] = safeSub(tokens[tokenGet][msg.sender], safeAdd(amount, feeTakeXfer));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.692.sol
    tokens[tokenGive][msg.sender] = safeAdd(tokens[tokenGive][msg.sender], safeMul(amountGive, amount) / amountGet);
 ==> 
    tokens[tokenGive][msg.sender] = safeAdd(tokens[tokenGive][tx.origin], safeMul(amountGive, amount) / amountGet);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0xde86f709f9001a155a4a7fd40f0f4bcdbe41b4db_Crowdsale.mutant.73.sol
        balanceOf[msg.sender] += amount;
 ==> 
        balanceOf[tx.origin] += amount;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.162.sol
            dividendShares[msg.sender] = dividendShares[msg.sender].add(_dividendShares);
 ==> 
            dividendShares[tx.origin] = dividendShares[msg.sender].add(_dividendShares);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.230.sol
        balances[msg.sender] = safeSub(balances[msg.sender], tokens);
 ==> 
        balances[tx.origin] = safeSub(balances[msg.sender], tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.266.sol
        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
 ==> 
        allowed[from][msg.sender] = safeSub(allowed[from][tx.origin], tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.49.sol
    modifier onlyPayerOrRecipient() { if ((msg.sender != payer) && (msg.sender != recipient)) throw; _; }
 ==> 
    modifier onlyPayerOrRecipient() { if ((msg.sender != payer) && (tx.origin != recipient)) throw; _; }
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.163.sol
    balances[msg.sender] = safeSub(balances[msg.sender], _value);
 ==> 
    balances[msg.sender] = safeSub(balances[tx.origin], _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x81be91c7e74ad0957b4156f782263e7b0b88cf7b_ProxyToken.mutant.108.sol
        return doTransfer(msg.sender, _to, _amount);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 1.8
================================================================================
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.153.sol
        if (allowed[_from][msg.sender] != MAX_UINT256 && _from != msg.sender) {
 ==> 
        if (allowed[_from][tx.origin] != MAX_UINT256 && _from != msg.sender) {
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.70.sol
        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);
 ==> 
        balanceOf[tx.origin] = balanceOf[msg.sender].sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.449.sol
        balances[msg.sender] = balances[msg.sender] + tokensBought;
 ==> 
        balances[msg.sender] = balances[tx.origin] + tokensBought;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.542.sol
      require(msg.sender == val || msg.sender == chris || msg.sender == tom);
 ==> 
      require(msg.sender == val || msg.sender == chris || tx.origin == tom);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.540.sol
      require(msg.sender == val || msg.sender == chris || msg.sender == tom);
 ==> 
      require(tx.origin == val || msg.sender == chris || msg.sender == tom);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1415.sol
          HODLERAddress[msg.sender] = true;
 ==> 
          HODLERAddress[tx.origin] = true;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1553.sol
      TierClassicDividendAddress[msg.sender] = true;
 ==> 
      TierClassicDividendAddress[tx.origin] = true;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1244.sol
        if (_allowances[_from][msg.sender] > 0 && _value > 0 && _allowances[_from][msg.sender] >= _value &&
 ==> 
        if (_allowances[_from][msg.sender] > 0 && _value > 0 && _allowances[_from][tx.origin] >= _value &&
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.846.sol
        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);
 ==> 
        allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x44f5a721e710cc7d1a7faf74f4fa294f435abf8c_WhiteListed.mutant.95.sol
        require(msg.sender == minter || msg.sender == whiteLister || msg.sender == owner);
 ==> 
        require(msg.sender == minter || tx.origin == whiteLister || msg.sender == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x44f5a721e710cc7d1a7faf74f4fa294f435abf8c_WhiteListed.mutant.94.sol
        require(msg.sender == minter || msg.sender == whiteLister || msg.sender == owner);
 ==> 
        require(tx.origin == minter || msg.sender == whiteLister || msg.sender == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.46.sol
        if ((msg.sender != escapeHatchCaller)&&(msg.sender != owner))
 ==> 
        if ((tx.origin != escapeHatchCaller)&&(msg.sender != owner))
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.731.sol
      address investor = msg.sender;
 ==> 
      address investor = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.136.sol
        _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);
 ==> 
        _approvals[src][msg.sender] = sub(_approvals[src][tx.origin], wad);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.103.sol
        _balances[msg.sender] = sub(_balances[msg.sender], wad);
 ==> 
        _balances[msg.sender] = sub(_balances[tx.origin], wad);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.185.sol
    require(msg.sender == owner || isApprovedForAll(owner, msg.sender));
 ==> 
    require(tx.origin == owner || isApprovedForAll(owner, msg.sender));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.184.sol
      balances[msg.sender] += to_add;
 ==> 
      balances[tx.origin] += to_add;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.15.sol
        require(msg.sender == addrAdmin);
 ==> 
        require(tx.origin == addrAdmin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x8dee46279c444f037032a34d1ee3d48142a33725_CoinFlip.mutant.94.sol
        require (msg.sender == A.addr || msg.sender == Z.addr);
 ==> 
        require (tx.origin == A.addr || msg.sender == Z.addr);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.331.sol
    require(msg.sender == owner || msg.sender == saleAgent || mintingFinished);
 ==> 
    require(tx.origin == owner || msg.sender == saleAgent || mintingFinished);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.902.sol
    tokenAmountOf[msg.sender] = tokenAmountOf[msg.sender].add(tokens);
 ==> 
    tokenAmountOf[tx.origin] = tokenAmountOf[msg.sender].add(tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.897.sol
    investedAmountOf[msg.sender] = investedAmountOf[msg.sender].add(weiInvested);
 ==> 
    investedAmountOf[msg.sender] = investedAmountOf[tx.origin].add(weiInvested);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1057.sol
    require(locked[addr] < now && (msg.sender == saleAgent || msg.sender == addr));
 ==> 
    require(locked[addr] < now && (tx.origin == saleAgent || msg.sender == addr));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.777.sol
    require(directMintAgent == msg.sender || owner == msg.sender);
 ==> 
    require(directMintAgent == msg.sender || owner == tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.402.sol
    require((msg.sender == saleAgent || msg.sender == owner) && !mintingFinished);
 ==> 
    require((msg.sender == saleAgent || tx.origin == owner) && !mintingFinished);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.401.sol
    increaseApprovalAllArgs(_spender, _addedValue, msg.sender);
 ==> 
    increaseApprovalAllArgs(_spender, _addedValue, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.573.sol
            return delegate.delegateIncreaseApproval(spender, addedValue, msg.sender);
 ==> 
            return delegate.delegateIncreaseApproval(spender, addedValue, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.549.sol
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
 ==> 
    Deposit(token, msg.sender, amount, tokens[token][tx.origin]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.59.sol
    require(msg.sender == owner);
 ==> 
    require(tx.origin == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.106.sol
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==> 
    balances[msg.sender] = balances[tx.origin].sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.311.sol
        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);     // Subtract from the sender's allowance
 ==> 
        allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_value);     // Subtract from the sender's allowance
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.272.sol
        balances[msg.sender] = balances[msg.sender].sub(_value);    // Subtract from the sender
 ==> 
        balances[tx.origin] = balances[msg.sender].sub(_value);    // Subtract from the sender
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.254.sol
        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
 ==> 
        emit Approval(msg.sender, _spender, allowed[tx.origin][_spender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x037eb59665afccd8a9c09a16621a13e51064da9f_TwinToken.mutant.291.sol
        balances[msg.sender] = initialSupply;
 ==> 
        balances[tx.origin] = initialSupply;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x61245b6a6678f3158a37ab2c5e52369b9f452318_LightOracle.mutant.68.sol
        require(msg.sender == provider1 || msg.sender == provider2 || msg.sender == owner);
 ==> 
        require(msg.sender == provider1 || msg.sender == provider2 || tx.origin == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.8
================================================================================
0x61245b6a6678f3158a37ab2c5e52369b9f452318_LightOracle.mutant.101.sol
        require(msg.sender == provider1 || msg.sender == provider2 || msg.sender == owner);
 ==> 
        require(msg.sender == provider1 || tx.origin == provider2 || msg.sender == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.213.sol
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==> 
    allowed[_from][msg.sender] = allowed[_from][tx.origin].sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.350.sol
    allowed[msg.sender][_spender] = _amount;
 ==> 
    allowed[tx.origin][_spender] = _amount;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.123.sol
        address _newNorse    = msg.sender;
 ==> 
        address _newNorse    = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.749.sol
        address _addr = msg.sender;
 ==> 
        address _addr = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x4802d26384bcaf94a41108d55d5d13500dea8e61_Crowdsale.mutant.767.sol
        TokenPurchase(msg.sender, beneficiary, weiAmount, numTokens);
 ==> 
        TokenPurchase(tx.origin, beneficiary, weiAmount, numTokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.109.sol
        uint256 allowance = allowed[_from][msg.sender];
 ==> 
        uint256 allowance = allowed[_from][tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.158.sol
            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==> 
            allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1524.sol
            balances[msg.sender] -= _amount;
 ==> 
            balances[tx.origin] -= _amount;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.2038.sol
            allowed[_from][msg.sender] -= uint96(_amount);
 ==> 
            allowed[_from][tx.origin] -= uint96(_amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.2595.sol
        TokensDelegated(tokenHolder, amount, msg.sender);
 ==> 
        TokensDelegated(tokenHolder, amount, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1389.sol
        dividendAddress[msg.sender] = true;
 ==> 
        dividendAddress[tx.origin] = true;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.573.sol
				if ( now >= icoStartTime && now < ico1StartTime){ tTokenPerEth = icoPerEth; }
 ==> 
				if ( now != icoStartTime && now < ico1StartTime){ tTokenPerEth = icoPerEth; }
CHANGE: ...>...==>...!...
********************************************************************************
new distance 1.6
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.788.sol
        balances[msg.sender] = balances[msg.sender].sub(_amount);
 ==> 
        balances[msg.sender] = balances[tx.origin].sub(_amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.847.sol
        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);
 ==> 
        allowed[_from][msg.sender] = allowed[_from][tx.origin].sub(_amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.142.sol
        p.spender = msg.sender;
 ==> 
        p.spender = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0xf75630f76c4671c512e0aca03d8788c31a8484bc_IVNT1Token.mutant.244.sol
        emit Approval(msg.sender, spender, tokens);
 ==> 
        emit Approval(tx.origin, spender, tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.114.sol
    Transfer(msg.sender, _to, _value);
 ==> 
    Transfer(tx.origin, _to, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.6
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.208.sol
      msg.sender,
 ==> 
      tx.origin,
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.303.sol
    return super.transfer(_to, _value);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 1.4
================================================================================
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.292.sol
        Confirmation(msg.sender, transactionId);
 ==> 
        Confirmation(tx.origin, transactionId);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.804.sol
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) revert();
 ==> 
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == tx.origin)) revert();
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.44.sol
        balanceOf[msg.sender] = totalSupply;                // Give the creator all initial tokens
 ==> 
        balanceOf[tx.origin] = totalSupply;                // Give the creator all initial tokens
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.225.sol
        msg.sender.transfer(_amount);
 ==> 
        tx.origin.transfer(_amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x79a6e552b1bf27fff02f383ae795bd35dd2f3f8c_TokenBBB17.mutant.131.sol
        balances[msg.sender] = _initialAmount;               // Give the creator all initial tokens
 ==> 
        balances[tx.origin] = _initialAmount;               // Give the creator all initial tokens
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.2559.sol
        isTransferAllowed(msg.sender, _spender)
 ==> 
        isTransferAllowed(tx.origin, _spender)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1548.sol
      INRdividends[msg.sender]._tier3Reg = block.number;
 ==> 
      INRdividends[tx.origin]._tier3Reg = block.number;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1602.sol
      TierWildcatDividendAddress[msg.sender] = true;
 ==> 
      TierWildcatDividendAddress[tx.origin] = true;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1410.sol
          INRdividends[msg.sender]._hodlReg = block.number;
 ==> 
          INRdividends[tx.origin]._hodlReg = block.number;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0xf75630f76c4671c512e0aca03d8788c31a8484bc_IVNT1Token.mutant.232.sol
        emit Transfer(msg.sender, to, tokens);
 ==> 
        emit Transfer(tx.origin, to, tokens);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0xf75630f76c4671c512e0aca03d8788c31a8484bc_IVNT1Token.mutant.327.sol
        emit Burn(msg.sender, _value);
 ==> 
        emit Burn(tx.origin, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.106.sol
    uint _allowance = allowed[_from][msg.sender];
 ==> 
    uint _allowance = allowed[_from][tx.origin];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x729e7f1fbb752d09dfdc3bc1ee4d097a983aa6c8_BCOToken.mutant.468.sol
    if(msg.sender != owner) throw;
 ==> 
    if(tx.origin != owner) throw;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x589d5be703c93fede7de18c24f6e82f0a6e18005_Teste.mutant.103.sol
        return (now >= creationDate + 1 * 1 days);
 ==> 
        return (now != creationDate + 1 * 1 days);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 1.4
================================================================================
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.279.sol
    balances[msg.sender] = 0;
 ==> 
    balances[tx.origin] = 0;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.204.sol
      balances[msg.sender] += msg.value;
 ==> 
      balances[tx.origin] += msg.value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.537.sol
    else if (now <= start +  3 days) rate = 1250; // day 1 to 3, 25% bonus
 ==> 
    else if (now != start +  3 days) rate = 1250; // day 1 to 3, 25% bonus
CHANGE: ...<...==>...!...
********************************************************************************
new distance 1.4
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.861.sol
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) throw;
 ==> 
    if (!(orders[tx.origin][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) throw;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.200.sol
    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
 ==> 
    allowed[tx.origin][_spender] = allowed[msg.sender][_spender].add(_addedValue);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.229.sol
      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
 ==> 
      allowed[tx.origin][_spender] = oldValue.sub(_subtractedValue);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.4
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.221.sol
        allowed[msg.sender][_spender] = (allowed[msg.sender][_spender].add(_addedValue));
 ==> 
        allowed[msg.sender][_spender] = (allowed[tx.origin][_spender].add(_addedValue));
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.mutant.10.sol
        require (msg.sender == owner);
 ==> 
        require (tx.origin == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.29.sol
        balanceOf[msg.sender] = totalSupply;
 ==> 
        balanceOf[tx.origin] = totalSupply;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.1885.sol
        if (_pID == 0)
 ==> 
        if (_pID >= 0)
CHANGE: ...=...==>...>...
********************************************************************************
new distance 1.2
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1855.sol
    msg.sender.transfer(toReturn);
 ==> 
    tx.origin.transfer(toReturn);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.199.sol
      allowed[_from][msg.sender] -= _value;
 ==> 
      allowed[_from][tx.origin] -= _value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1186.sol
            balanceOf[msg.sender] -= _value;
 ==> 
            balanceOf[tx.origin] -= _value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1458.sol
      TierStarterDividendAddress[msg.sender] = true;
 ==> 
      TierStarterDividendAddress[tx.origin] = true;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1272.sol
            _allowances[_from][msg.sender] -= _value;
 ==> 
            _allowances[_from][tx.origin] -= _value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.193.sol
        _Owner = msg.sender;
 ==> 
        _Owner = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.787.sol
        balances[msg.sender] = balances[msg.sender].sub(_amount);
 ==> 
        balances[tx.origin] = balances[msg.sender].sub(_amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.346.sol
      allowed[msg.sender][_spender] = _value;
 ==> 
      allowed[tx.origin][_spender] = _value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0x589d5be703c93fede7de18c24f6e82f0a6e18005_Teste.mutant.21.sol
        return (now >= creationDate + 5 * 1 minutes);
 ==> 
        return (now >= creationDate / 5 * 1 minutes);
CHANGE: ...+...==>.../...
********************************************************************************
new distance 1.2
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.563.sol
    else if (now <= start + 10 days) rate = 1150; // day 4 to 10, 15% bonus
 ==> 
    else if (now != start + 10 days) rate = 1150; // day 4 to 10, 15% bonus
CHANGE: ...<...==>...!...
********************************************************************************
new distance 1.2
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1090.sol
        _buyDiscountTTM(msg.value, _mgrId, _gameWalletAddr, msg.sender);
 ==> 
        _buyDiscountTTM(msg.value, _mgrId, _gameWalletAddr, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.6.sol
        addrAdmin = msg.sender;
 ==> 
        addrAdmin = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1114.sol
        _buyCommonTTW(msg.value, _wonderId, _gameWalletAddr, msg.sender);
 ==> 
        _buyCommonTTW(msg.value, _wonderId, _gameWalletAddr, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.184.sol
    Approval(msg.sender, _spender, _value);
 ==> 
    Approval(tx.origin, _spender, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.2
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1788.sol
    bool withinPeriod = now >= startTimestamp && now <= end2Timestamp;
 ==> 
    bool withinPeriod = now >= startTimestamp && now != end2Timestamp;
CHANGE: ...<...==>...!...
********************************************************************************
new distance 1.2
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.479.sol
			if ( ( now >= icoOpenTime ) && ( now <= icoEndTime ) ){
 ==> 
			if ( ( now != icoOpenTime ) && ( now <= icoEndTime ) ){
CHANGE: ...>...==>...!...
********************************************************************************
new distance 1.2
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.271.sol
    require(block.timestamp >= openingTime && block.timestamp <= closingTime);
 ==> 
    require(block.timestamp >= openingTime && block.timestamp != closingTime);
CHANGE: ...<...==>...!...
********************************************************************************
new distance 1.1
================================================================================
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.162.sol
      var change_to_return = transferred_total + msg.value - max_goal_amount;
 ==> 
      var change_to_return = transferred_total + 0 - max_goal_amount;
CHANGE: ...msg.value...==>...0...
********************************************************************************
new distance 1.1
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.655.sol
    require(now <= end);
 ==> 
    require(now != end);
CHANGE: ...<...==>...!...
********************************************************************************
new distance 1.1
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.424.sol
    return super.transferFrom(from, to, value);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 1.1
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.418.sol
    return super.transfer(_to, _value);
 ==> 
selfdestruct(msg.sender);
CHANGE: selfdestruct(msg.sender);

********************************************************************************
new distance 1.0
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.268.sol
        address _buyer       = msg.sender;
 ==> 
        address _buyer       = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.225.sol
        address _caller = msg.sender;
 ==> 
        address _caller = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.104.sol
        _transfer(msg.sender, _to, _value);
 ==> 
        _transfer(tx.origin, _to, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.113.sol
            allowed[_from][msg.sender] -= _value;
 ==> 
            allowed[_from][tx.origin] -= _value;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.52.sol
            Transfer(msg.sender, _to, _value);
 ==> 
            Transfer(tx.origin, _to, _value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.252.sol
        Transfer(fundsWallet, msg.sender, amount); // Broadcast a message to the blockchain
 ==> 
        Transfer(fundsWallet, tx.origin, amount); // Broadcast a message to the blockchain
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0xdff260736cbe28cc9984c95162d3eb7390318c36_TGEDeployer.mutant.1511.sol
    buyTokens(msg.sender);
 ==> 
    buyTokens(tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.610.sol
    emit Trade(tokenGet, amount, tokenGive, amountGive * amount / amountGet, user, msg.sender);
 ==> 
    emit Trade(tokenGet, amount, tokenGive, amountGive * amount / amountGet, user, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.434.sol
    emit Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
 ==> 
    emit Deposit(0, msg.sender, msg.value, tokens[0][tx.origin]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.497.sol
    emit Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
 ==> 
    emit Deposit(token, msg.sender, amount, tokens[token][tx.origin]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.548.sol
    emit Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender);
 ==> 
    emit Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.468.sol
    emit Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);
 ==> 
    emit Withdraw(0, msg.sender, amount, tokens[0][tx.origin]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.496.sol
    emit Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
 ==> 
    emit Deposit(token, tx.origin, amount, tokens[token][msg.sender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x4802d26384bcaf94a41108d55d5d13500dea8e61_Crowdsale.mutant.574.sol
        require(now >= endTime);
 ==> 
        require(now != endTime);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 1.0
================================================================================
0x81be91c7e74ad0957b4156f782263e7b0b88cf7b_ProxyToken.mutant.317.sol
            msg.sender,
 ==> 
            tx.origin,
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.796.sol
        emit Transfer(msg.sender, _to, _amount);
 ==> 
        emit Transfer(tx.origin, _to, _amount);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1763.sol
        require(msg.sender == addrFinance || msg.sender == addrAdmin);
 ==> 
        require(msg.sender == addrFinance || tx.origin == addrAdmin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.178.sol
        addrFinance = msg.sender;
 ==> 
        addrFinance = tx.origin;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.960.sol
    msg.sender.transfer(value);
 ==> 
    tx.origin.transfer(value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.590.sol
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
 ==> 
    Withdraw(token, msg.sender, amount, tokens[token][tx.origin]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.476.sol
    Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
 ==> 
    Deposit(0, tx.origin, msg.value, tokens[0][msg.sender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.874.sol
    Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);
 ==> 
    Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, tx.origin, v, r, s);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.589.sol
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
 ==> 
    Withdraw(token, tx.origin, amount, tokens[token][msg.sender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x312611a7fcf5fdfbca2b5074dbf24ff1cb1f9578_EtherDelta.mutant.516.sol
    Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);
 ==> 
    Withdraw(0, tx.origin, amount, tokens[0][msg.sender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.221.sol
      allowed[msg.sender][_spender] = 0;
 ==> 
      allowed[tx.origin][_spender] = 0;
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.164.sol
    allowed[_from][msg.sender] = _allowance.sub(_value);
 ==> 
    allowed[_from][tx.origin] = _allowance.sub(_value);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 1.0
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.287.sol
    require(_openingTime >= block.timestamp);
 ==> 
    require(_openingTime != block.timestamp);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 1.0
================================================================================
0x037eb59665afccd8a9c09a16621a13e51064da9f_TwinToken.mutant.214.sol
        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
 ==> 
        Approval(msg.sender, _spender, allowed[tx.origin][_spender]);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 0.9
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.2552.sol
        return super.transfer(_to, _amount);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 0.9
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.2562.sol
        return super.approve(_spender, _amount);
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 0.8
================================================================================
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.301.sol
        confirmed(transactionId, msg.sender)
 ==> 
        confirmed(transactionId, tx.origin)
CHANGE: ...msg...sender...==>...tx...origin...
