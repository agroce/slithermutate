================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.272.sol
    uint oldValue = allowed[msg.sender][_spender];
 ==> 
    uint oldValue = allowed[tx.origin][_spender];
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 61.6
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.922.sol
        return(  ((((round_[_rID].mask).add(((((round_[_rID].pot).mul(potSplit_[round_[_rID].team].gen)) / 100).mul(1000000000000000000)) / (round_[_rID].keys))).mul(plyrRnds_[_pID][_rID].keys)) / 1000000000000000000)  );
 ==> 
        return(  ((((round_[_rID].mask).add(((((round_[_rID].pot).mul(potSplit_[round_[_rID].team].gen)) / 100).mul(1000000000000000000)) / (round_[_rID].keys))).mul(plyrRnds_[_pID][_rID].keys)) * 1000000000000000000)  );
CHANGE: .../...==>...*...
********************************************************************************
new distance 49.2
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.275.sol
        if (!p.recipient.send(p.amount)) {  // Make the payment
 ==> 
        if (true) {  // Make the payment
CHANGE:         if (true) {  // Make the payment

********************************************************************************
new distance 44.1
================================================================================
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.163.sol
        balances[msg.sender] = 1000000000000000000000;               // Give the creator all initial tokens. This is set to 1000 for example. If you want your initial tokens to be X and your decimal is 5, set this value to X * 100000. (CHANGE THIS)
 ==> 
        balances[tx.origin] = 1000000000000000000000;               // Give the creator all initial tokens. This is set to 1000 for example. If you want your initial tokens to be X and your decimal is 5, set this value to X * 100000. (CHANGE THIS)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 43.1
================================================================================
0x7ef8873220958ea400d505a9c92d6ae24f34d55e_ARCDCrowdsale.mutant.579.sol
      require (tokens >= MIN_BUY_TOKENS || (TOKEN_CREATION_CAP.sub(token.totalSupply())) <= MIN_BUY_TOKENS);
 ==> 
      require (tokens >=0 || (TOKEN_CREATION_CAP.sub(token.totalSupply())) <= MIN_BUY_TOKENS);
CHANGE: ...MIN_BUY_TOKENS ...==>...0...
********************************************************************************
new distance 42.6
================================================================================
0xec09cc854227b0051e70156269b8c0ca4e9ae93e_VeTokenizedAsset.mutant.190.sol
    return true;
 ==> 
revert();
CHANGE: revert();

********************************************************************************
new distance 42.2
================================================================================
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.274.sol
        if (!p.recipient.send(p.amount)) {  // Make the payment
 ==> 
        if (false) {  // Make the payment
CHANGE: ...!p.recipient....nd(p.amount...)...==>...fal...
********************************************************************************
new distance 39.3
================================================================================
0xf35c09172F521F11569147fBa340a27cEc76E086_WithDrawChildDAO.mutant.1152.sol
        childDAOs[0xbc07118b9ac290e4622f1e77a0853539789effbe] = SplitData(7932411170508884080269057, 11565410862736318056781866);
 ==> 
        childDAOs[0xbc07118b9ac290e4622f5e77a0853539789effbe] = SplitData(7932411170508884080269057, 11565410862736318056781866);
CHANGE: ...1...==>...5...
********************************************************************************
new distance 34.8
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.519.sol
        if ((balanceOf[_address]) >= 100000000000 && (HODLERAddress[_address] == true)) { //100000INR
 ==> 
        if ((balanceOf[_address]) >= 0 && (HODLERAddress[_address] == true)) { //100000INR
CHANGE: ...1...0000000000...==>...
********************************************************************************
new distance 31.1
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.480.sol
        var mul = (block.timestamp - lastMinedOn);
 ==> 
        var mul = (0 - lastMinedOn);
CHANGE: ...block.timestamp...==>...0...
********************************************************************************
new distance 30.0
================================================================================
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.251.sol
        return ERC20Interface(tokenAddress).transfer(owner, tokens);
 ==> 
        /*return ERC20Interface(tokenAddress).transfer(owner, tokens);*/
CHANGE: ...==>.../*...*/...
********************************************************************************
new distance 26.4
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1405.sol
                    balances[R_N_D_WALLET] = (((totalTokensForSale - stages[(stages.length - 1)].coinsAvailable) * DST_R_N_B_PROGRAM)/100);
 ==> 
                    balances[R_N_D_WALLET] = (((totalTokensForSale / stages[(stages.length - 1)].coinsAvailable) * DST_R_N_B_PROGRAM)/100);
CHANGE: ...-...==>.../...
********************************************************************************
new distance 25.8
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.2936.sol
        return ((78125000).mul(_keys.sq()).add(((149999843750000).mul(_keys.mul(1000000000000000000))) / (2))) / ((1000000000000000000).sq());
 ==> 
        return ((78125000).mul(_keys.sq()).add(((149999843750000).mul(_keys.mul(1000000000000000000))) / (2))) * ((1000000000000000000).sq());
CHANGE: .../...==>...*...
********************************************************************************
new distance 25.5
================================================================================
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.163.sol
      var change_to_return = transferred_total + msg.value - max_goal_amount;
 ==> 
      var change_to_return = transferred_total + 1 - max_goal_amount;
CHANGE: ...msg.value...==>...1...
********************************************************************************
new distance 25.2
================================================================================
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.249.sol
        return ERC20Interface(tokenAddress).transfer(owner, tokens);
 ==> 
selfdestruct(msg.sender);
CHANGE: selfdestruct(msg.sender);

********************************************************************************
new distance 24.8
================================================================================
0x7ef8873220958ea400d505a9c92d6ae24f34d55e_ARCDCrowdsale.mutant.377.sol
    uint256 public constant FUNDING_END_TIMESTAMP = FUNDING_START_TIMESTAMP + (60 * 60 * 24 * 90); // 90 days
 ==> 
    uint256 public constant FUNDING_END_TIMESTAMP = FUNDING_START_TIMESTAMP + (60 * 60 / 24 * 90); // 90 days
CHANGE: ...*...==>.../...
********************************************************************************
new distance 24.0
================================================================================
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.383.sol
        msg.sender.transfer(amount * sellPrice);          // sends ether to the seller. It's important to do this last to avoid recursion attacks
 ==> 
        tx.origin.transfer(amount * sellPrice);          // sends ether to the seller. It's important to do this last to avoid recursion attacks
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 21.2
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.752.sol
        (bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXnameFromDapp.value(msg.value)(msg.sender, _name, _affCode, _all);
 ==> 
        (bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXnameFromDapp.value(msg.value)(tx.origin, _name, _affCode, _all);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 21.2
================================================================================
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.554.sol
				if ( now >= presaleStartTime && now < icoStartTime){ tTokenPerEth = presalePerEth; }
 ==> 
				if ( now != presaleStartTime && now < icoStartTime){ tTokenPerEth = presalePerEth; }
CHANGE: ...>...==>...!...
********************************************************************************
new distance 21.0
================================================================================
0x98564618d909636e7bc9cb47faec7253a5e4c1d5_MetaToken.mutant.442.sol
        Mine(msg.sender, blockReward, uint40(block.timestamp) - uint40(lastMinedOn)); // issuing event to those who listens for it
 ==> 
        Mine(tx.origin, blockReward, uint40(block.timestamp) - uint40(lastMinedOn)); // issuing event to those who listens for it
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 20.7
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.1293.sol
            if (_keys >= 1000000000000000000)
 ==> 
            if (_keys >= 0)
CHANGE: ...1...00000000000000000...==>...
********************************************************************************
new distance 20.5
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.803.sol
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) revert();
 ==> 
    if (!(orders[tx.origin][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) revert();
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 20.4
================================================================================
0x346bce8f3b9c118e84643de7b992e55227a1c95a_ERC20Token.mutant.167.sol
        balances[msg.sender] = 300000000000000000000000000;               // Give the creator all initial tokens (100000 for example)
 ==> 
        balances[tx.origin] = 300000000000000000000000000;               // Give the creator all initial tokens (100000 for example)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 19.8
================================================================================
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.463.sol
    require(totalInvested >= softcap || now > lastSaleDate());
 ==> 
    require(totalInvested >=0 || now > lastSaleDate());
CHANGE: ...softcap ...==>...0...
********************************************************************************
new distance 19.2
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.311.sol
        require(nextDiscountTTMTokenId6 >= 361 && nextDiscountTTMTokenId6 <= 391);
 ==> 
        require(nextDiscountTTMTokenId6 >= 0 && nextDiscountTTMTokenId6 <= 391);
CHANGE: ...361...==>...0...
********************************************************************************
new distance 19.0
================================================================================
0x4802d26384bcaf94a41108d55d5d13500dea8e61_Crowdsale.mutant.403.sol
    uint256 constant crowdSaleCap = 14*10**6*(1 ether);  // Max avaialble number of tokens for crowdsale 18 M (unit wei)
 ==> 
    uint256 constant crowdSaleCap = 14/10**6*(1 ether);  // Max avaialble number of tokens for crowdsale 18 M (unit wei)
CHANGE: ...*...==>.../...
********************************************************************************
new distance 17.6
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.691.sol
    tokens[tokenGive][msg.sender] = safeAdd(tokens[tokenGive][msg.sender], safeMul(amountGive, amount) / amountGet);
 ==> 
    tokens[tokenGive][tx.origin] = safeAdd(tokens[tokenGive][msg.sender], safeMul(amountGive, amount) / amountGet);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 17.2
================================================================================
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.649.sol
        if (f == 0) {
 ==> 
        if (f >= 0) {
CHANGE: ...=...==>...>...
********************************************************************************
new distance 17.2
================================================================================
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.202.sol
        fundsWallet = msg.sender;                                    // The owner of the contract gets ETH
 ==> 
        fundsWallet = tx.origin;                                    // The owner of the contract gets ETH
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 17.0
================================================================================
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.312.sol
        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);     // Subtract from the sender's allowance
 ==> 
        allowed[_from][msg.sender] = allowed[_from][tx.origin].sub(_value);     // Subtract from the sender's allowance
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 16.8
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.805.sol
        uint256 fee = payStakingFee(msg.sender, _value, burnFeeNumerator, burnFeeDenominator, burnFeeFlat, 0x0);
 ==> 
        uint256 fee = payStakingFee(tx.origin, _value, burnFeeNumerator, burnFeeDenominator, burnFeeFlat, 0x0);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 16.2
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1804.sol
        require(stages[currentStage].startsAt <= now && now < stages[currentStage].endsAt);
 ==> 
        require(stages[currentStage].startsAt != now && now < stages[currentStage].endsAt);
CHANGE: ...<...==>...!...
********************************************************************************
new distance 16.2
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.991.sol
        _hodlRewards = _hodlAvgDiff * hodlersDividendsPerBlockPerAddress * hodlAmt;
 ==> 
        _hodlRewards = _hodlAvgDiff / hodlersDividendsPerBlockPerAddress * hodlAmt;
CHANGE: ...*...==>.../...
********************************************************************************
new distance 15.4
================================================================================
0x635783f8dc5e941fc142235ea44cc3529c17695d_EtherHellFaucet.mutant.275.sol
        DividendsWithdrawal(now, msg.sender, _dividendShares, _amount, totalDividendShares, dividendFund);
 ==> 
        DividendsWithdrawal(now, tx.origin, _dividendShares, _amount, totalDividendShares, dividendFund);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 15.4
================================================================================
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.48.sol
    modifier onlyPayerOrRecipient() { if ((msg.sender != payer) && (msg.sender != recipient)) throw; _; }
 ==> 
    modifier onlyPayerOrRecipient() { if ((tx.origin != payer) && (msg.sender != recipient)) throw; _; }
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 15.2
================================================================================
0x1748255382157bc5d4ed7e70c56afc5c97bddf07_Santacoin.mutant.347.sol
        return (ETHAmounts[holderAddress] > 0 && SantaCoinRewardsInETH[holderAddress] == 0);
 ==> 
        return (ETHAmounts[holderAddress] > 0 && SantaCoinRewardsInETH[holderAddress] >= 0);
CHANGE: ...=...==>...>...
********************************************************************************
new distance 15.0
================================================================================
0x5313e9783e5b56389b14cd2a99be9d283a03f8c6_TokenContract.mutant.387.sol
    balances[msg.sender] = 600000 * (10 ** uint256(decimals));  // transferred to the owner (2%)
 ==> 
    balances[tx.origin] = 600000 * (10 ** uint256(decimals));  // transferred to the owner (2%)
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 14.8
================================================================================
0xa70f4fecbe032135ad970dceeb9e5076a5be8b1d_iGniter.mutant.1243.sol
        if (_allowances[_from][msg.sender] > 0 && _value > 0 && _allowances[_from][msg.sender] >= _value &&
 ==> 
        if (_allowances[_from][tx.origin] > 0 && _value > 0 && _allowances[_from][msg.sender] >= _value &&
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 14.8
================================================================================
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.98.sol
        emit Transfer(fundsWallet, msg.sender, amount); // Broadcast a message to the blockchain
 ==> 
        emit Transfer(fundsWallet, tx.origin, amount); // Broadcast a message to the blockchain
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 14.3
================================================================================
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.814.sol
    emit Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);
 ==> 
    emit Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, tx.origin, v, r, s);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 14.0
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.589.sol
    else if (now <= start + 20 days) rate = 1050; // day 11 to 20, 5% bonus
 ==> 
    else if (now != start + 20 days) rate = 1050; // day 11 to 20, 5% bonus
CHANGE: ...<...==>...!...
********************************************************************************
new distance 13.8
================================================================================
0x9e28b3a4d14869df0556702687096a0fbe51d094_USDDigital.mutant.591.sol
            return delegate.delegateDecreaseApproval(spender, subtractedValue, msg.sender);
 ==> 
            return delegate.delegateDecreaseApproval(spender, subtractedValue, tx.origin);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 13.8
================================================================================
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.267.sol
    require(block.timestamp >= openingTime && block.timestamp <= closingTime);
 ==> 
    require(block.timestamp != openingTime && block.timestamp <= closingTime);
CHANGE: ...>...==>...!...
********************************************************************************
new distance 13.3
================================================================================
0x61245b6a6678f3158a37ab2c5e52369b9f452318_LightOracle.mutant.66.sol
        require(msg.sender == provider1 || msg.sender == provider2 || msg.sender == owner);
 ==> 
        require(tx.origin == provider1 || msg.sender == provider2 || msg.sender == owner);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 13.2
================================================================================
0x9b8030daf507b8bda0b9f692d576a0e87ff62e59_Justo.mutant.425.sol
        difficulty = difficulty * 10 minutes / timeSinceLastProof + 1; 
 ==> 
        difficulty = difficulty * 10 minutes / timeSinceLastProof * 1; 
CHANGE: ...+...==>...*...
********************************************************************************
new distance 12.8
================================================================================
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.507.sol
    bool duringGracePeriod = gracePeriodSet && now <= gracePeriodStart + 24 hours;
 ==> 
    bool duringGracePeriod = gracePeriodSet && now != gracePeriodStart + 24 hours;
CHANGE: ...<...==>...!...
********************************************************************************
new distance 12.7
================================================================================
0x29488e24cfdaa52a0b837217926c0c0853db7962_SuperCard.mutant.717.sol
            emit F3Devents.onWithdraw(_pID, msg.sender, plyr_[_pID].name, _eth, _now);
 ==> 
            emit F3Devents.onWithdraw(_pID, tx.origin, plyr_[_pID].name, _eth, _now);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 12.2
================================================================================
0x136b1e6e149f0dadf3c662fb6feec3d7587aaadd_UNITDummyPaymentGateway.mutant.1368.sol
                                    + ( ( stages[(stages.length - 1)].coinsAvailable * DST_R_N_B_PROGRAM ) / 100 ) );
 ==> 
                                    * ( ( stages[(stages.length - 1)].coinsAvailable * DST_R_N_B_PROGRAM ) / 100 ) );
CHANGE: ...+...==>...*...
********************************************************************************
new distance 12.2
================================================================================
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.358.sol
      ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);
 ==> 
      ApproveAndCallFallBack(spender).receiveApproval(tx.origin, tokens, this, data);
CHANGE: ...msg...sender...==>...tx...origin...
********************************************************************************
new distance 12.2
================================================================================
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.119.sol
        require(tokens_bought >= 1 && tokens_bought <= MAX_TOKEN_BUYIN);
 ==> 
        require(tokens_bought >= 0 && tokens_bought <= MAX_TOKEN_BUYIN);
CHANGE: ...1...==>...0...
