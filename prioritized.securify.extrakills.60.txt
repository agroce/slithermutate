READ 587 MUTANTS
********************************************************************************
MUTANT #1:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.93.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:62
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...==>.../*...*/...
    /*balances[msg.sender] = balances[msg.sender].sub(_value);*/
********************************************************************************
MUTANT #2:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.64.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:67
            throw;
 ==>  ...==>.../*...*/...
            /*throw;*/
********************************************************************************
MUTANT #3:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.635.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:293
				getTokens();
 ==>  ...==>.../*...*/...
				/*getTokens();*/
********************************************************************************
MUTANT #4:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.417.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:206
    if (feeRebate_ < feeRebate || feeRebate_ > feeTake) revert();
 ==>  ...==>.../*...*/...
    /*if (feeRebate_ < feeRebate || feeRebate_ > feeTake) revert();*/
********************************************************************************
MUTANT #5:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.196.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:302
    _preValidatePurchase(_beneficiary, weiAmount);
 ==>  ...==>.../*...*/...
    /*_preValidatePurchase(_beneficiary, weiAmount);*/
********************************************************************************
MUTANT #6:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.540.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:376
    totalHardcap = totalHardcap.add(stage.hardcap);
 ==>  ...==>.../*...*/...
    /*totalHardcap = totalHardcap.add(stage.hardcap);*/
********************************************************************************
MUTANT #7:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.257.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:399
    _addTokenTo(to, tokenId);
 ==>  ...==>.../*...*/...
    /*_addTokenTo(to, tokenId);*/
********************************************************************************
MUTANT #8:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.249.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:186
    hasMintPermission
 ==>  ...==>.../*...*/...
    /*hasMintPermission*/
********************************************************************************
MUTANT #9:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1095.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:312
        _buyDiscountTTM(msg.value, _mgrId, _gameWalletAddr, msg.sender);
 ==>  ...==>.../*...*/...
        /*_buyDiscountTTM(msg.value, _mgrId, _gameWalletAddr, msg.sender);*/
********************************************************************************
MUTANT #10:
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.58.sol: 424contracts//0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.sol:51
      require(newOwner != address(0));
 ==>  ...==>.../*...*/...
      /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #11:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.229.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:249
    assert(c >= a);
 ==>  ...==>.../*...*/...
    /*assert(c >= a);*/
********************************************************************************
MUTANT #12:
0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.mutant.161.sol: 424contracts//0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.sol:129
        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough
 ==>  ...==>.../*...*/...
        /*require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough*/
********************************************************************************
MUTANT #13:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.190.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:104
        _transfer(msg.sender, _to, _value);
 ==>  ...==>.../*...*/...
        /*_transfer(msg.sender, _to, _value);*/
********************************************************************************
MUTANT #14:
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.204.sol: 424contracts//0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.sol:137
            FundsReleased(amount);
 ==>  ...==>.../*...*/...
            /*FundsReleased(amount);*/
********************************************************************************
MUTANT #15:
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.353.sol: 424contracts//0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.sol:301
        return result;
 ==>  ...==>.../*...*/...
        /*return result;*/
********************************************************************************
MUTANT #16:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.136.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:165
    require(msg.sender == owner);
 ==>  ...==>.../*...*/...
    /*require(msg.sender == owner);*/
********************************************************************************
MUTANT #17:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.227.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:95
            buyTickets();
 ==>  ...==>.../*...*/...
            /*buyTickets();*/
********************************************************************************
MUTANT #18:
0x4687a10c6dd38fb93785a2962c01f4fdababcd50_Registrar.mutant.61.sol: 424contracts//0x4687a10c6dd38fb93785a2962c01f4fdababcd50_Registrar.sol:69
        require(newContractOwner != owner);
 ==>  ...==>.../*...*/...
        /*require(newContractOwner != owner);*/
********************************************************************************
MUTANT #19:
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.148.sol: 424contracts//0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.sol:50
        require(balanceOf[msg.sender] >= _value);   
 ==>  ...==>.../*...*/...
        /*require(balanceOf[msg.sender] >= _value);   */
********************************************************************************
MUTANT #20:
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.68.sol: 424contracts//0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.sol:48
        assert (msg.sender==owner);
 ==>  ...==>.../*...*/...
        /*assert (msg.sender==owner);*/
********************************************************************************
MUTANT #21:
0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.mutant.137.sol: 424contracts//0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.sol:59
        throw;
 ==>  ...==>.../*...*/...
        /*throw;*/
********************************************************************************
MUTANT #22:
0x78184d1d6d4aef9602e82e531ffc8a6baf8b9334_lockEtherPay.mutant.48.sol: 424contracts//0x78184d1d6d4aef9602e82e531ffc8a6baf8b9334_lockEtherPay.sol:59
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #23:
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.59.sol: 424contracts//0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.sol:45
        require(newOwner != address(0));
 ==>  ...==>.../*...*/...
        /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #24:
0xfF36f5A4bDC4DF83985C56b77D3E642Bf4c7d07E_FlatPricingExt.mutant.38.sol: 424contracts//0xfF36f5A4bDC4DF83985C56b77D3E642Bf4c7d07E_FlatPricingExt.sol:40
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #25:
0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.mutant.81.sol: 424contracts//0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.sol:66
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #26:
0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.mutant.158.sol: 424contracts//0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.sol:129
        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough
 ==>  ...==>.../*...*/...
        /*require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough*/
********************************************************************************
MUTANT #27:
0xb08520f896cb81f88e837f83d817e82f832b3a59_SAGAcrowdSale.mutant.36.sol: 424contracts//0xb08520f896cb81f88e837f83d817e82f832b3a59_SAGAcrowdSale.sol:33
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #28:
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.177.sol: 424contracts//0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.sol:146
        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough
 ==>  ...==>.../*...*/...
        /*require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough*/
********************************************************************************
MUTANT #29:
0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.mutant.156.sol: 424contracts//0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.sol:95
        throw;
 ==>  ...==>.../*...*/...
        /*throw;*/
********************************************************************************
MUTANT #30:
0x91714995529afc4c47eea50133651bc42be5cc7d_lockEtherPay.mutant.56.sol: 424contracts//0x91714995529afc4c47eea50133651bc42be5cc7d_lockEtherPay.sol:59
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #31:
0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.mutant.154.sol: 424contracts//0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.sol:90
        throw;
 ==>  ...==>.../*...*/...
        /*throw;*/
********************************************************************************
MUTANT #32:
0xc30b285c5cb47339051251976b17ef39afc1d7d3_lockEtherPay.mutant.46.sol: 424contracts//0xc30b285c5cb47339051251976b17ef39afc1d7d3_lockEtherPay.sol:59
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #33:
0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.mutant.143.sol: 424contracts//0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.sol:95
        throw;
 ==>  ...==>.../*...*/...
        /*throw;*/
********************************************************************************
MUTANT #34:
0x44f5a721e710cc7d1a7faf74f4fa294f435abf8c_WhiteListed.mutant.29.sol: 424contracts//0x44f5a721e710cc7d1a7faf74f4fa294f435abf8c_WhiteListed.sol:46
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #35:
0x343f9ef219f1794b3813328cedac7838c3adc169_lockEtherPay.mutant.48.sol: 424contracts//0x343f9ef219f1794b3813328cedac7838c3adc169_lockEtherPay.sol:59
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #36:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.130.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:103
    address owner = msg.sender;
 ==>  ...==>.../*...*/...
    /*address owner = msg.sender;*/
********************************************************************************
MUTANT #37:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.123.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:98
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  ...==>.../*...*/...
    /*allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);*/
********************************************************************************
MUTANT #38:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.687.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:258
        } else if (f == 2) {
 ==>  ...==>.../*...*/...
        /*} else if (f == 2) {*/
********************************************************************************
MUTANT #39:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.412.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:269
    MintFinished();
 ==>  ...==>.../*...*/...
    /*MintFinished();*/
********************************************************************************
MUTANT #40:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.642.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:419
    require(beneficiary != 0x0);
 ==>  ...==>.../*...*/...
    /*require(beneficiary != 0x0);*/
********************************************************************************
MUTANT #41:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.1055.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:446
			dist_airdrop(_participants[i], _amount);
 ==>  ...==>.../*...*/...
			/*dist_airdrop(_participants[i], _amount);*/
********************************************************************************
MUTANT #42:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.93.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:95
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  ...==>.../*...*/...
    /*allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);*/
********************************************************************************
MUTANT #43:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.198.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:220
    balances[_to] = balances[_to].add(_value);
 ==>  ...==>.../*...*/...
    /*balances[_to] = balances[_to].add(_value);*/
********************************************************************************
MUTANT #44:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.136.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:195
    internal
 ==>  ...==>.../*...*/...
    /*internal*/
********************************************************************************
MUTANT #45:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.216.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:154
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #46:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.265.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:174
    require(msg.sender == owner);
 ==>  ...==>.../*...*/...
    /*require(msg.sender == owner);*/
********************************************************************************
MUTANT #47:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.526.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:212
        require(_endTime > block.timestamp);
 ==>  ...==>.../*...*/...
        /*require(_endTime > block.timestamp);*/
********************************************************************************
MUTANT #48:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.98.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:246
    internal
 ==>  ...==>.../*...*/...
    /*internal*/
********************************************************************************
MUTANT #49:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.48.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:75
    require(_newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(_newOwner != address(0));*/
********************************************************************************
MUTANT #50:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.469.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:518
        return super.mint(_to, _amount);
 ==>  ...==>.../*...*/...
        /*return super.mint(_to, _amount);*/
********************************************************************************
MUTANT #51:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.139.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:208
        authorizedPayments.length++;
 ==>  ...==>.../*...*/...
        /*authorizedPayments.length++;*/
********************************************************************************
MUTANT #52:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.190.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:292
    buyTokens(msg.sender);
 ==>  ...==>.../*...*/...
    /*buyTokens(msg.sender);*/
********************************************************************************
MUTANT #53:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.190.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:201
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #54:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.165.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:93
    balances[_to] = balances[_to].add(_value);
 ==>  ...==>.../*...*/...
    /*balances[_to] = balances[_to].add(_value);*/
********************************************************************************
MUTANT #55:
0x4687a10c6dd38fb93785a2962c01f4fdababcd50_Registrar.mutant.76.sol: 424contracts//0x4687a10c6dd38fb93785a2962c01f4fdababcd50_Registrar.sol:102
        return addresses;
 ==>  ...==>.../*...*/...
        /*return addresses;*/
********************************************************************************
MUTANT #56:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.51.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:32
    assert(b <= a);
 ==>  ...==>.../*...*/...
    /*assert(b <= a);*/
********************************************************************************
MUTANT #57:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.190.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:223
        p.name = _name;
 ==>  ...==>.../*...*/...
        /*p.name = _name;*/
********************************************************************************
MUTANT #58:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.227.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:241
        if (msg.sender != p.recipient) throw;
 ==>  ...==>.../*...*/...
        /*if (msg.sender != p.recipient) throw;*/
********************************************************************************
MUTANT #59:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.499.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:347
    require(newSoftcap > 0);
 ==>  ...==>.../*...*/...
    /*require(newSoftcap > 0);*/
********************************************************************************
MUTANT #60:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.568.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:227
        require(_addr != address(0));
 ==>  ...==>.../*...*/...
        /*require(_addr != address(0));*/
********************************************************************************
MUTANT #61:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.425.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:278
    return super.transferFrom(from, to, value);
 ==>  ...==>.../*...*/...
    /*return super.transferFrom(from, to, value);*/
********************************************************************************
MUTANT #62:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.210.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:178
    require(msg.sender == owner);
 ==>  ...==>.../*...*/...
    /*require(msg.sender == owner);*/
********************************************************************************
MUTANT #63:
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.10.sol: 424contracts//0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.sol:36
        internal
 ==>  ...==>.../*...*/...
        /*internal*/
********************************************************************************
MUTANT #64:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.371.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:194
    if (feeMake_ > feeMake) revert();
 ==>  ...==>.../*...*/...
    /*if (feeMake_ > feeMake) revert();*/
********************************************************************************
MUTANT #65:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1180.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:347
            } else {
 ==>  ...==>.../*...*/...
            /*} else {*/
********************************************************************************
MUTANT #66:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.134.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:118
    balances[_to] = balances[_to].add(_value);
 ==>  ...==>.../*...*/...
    /*balances[_to] = balances[_to].add(_value);*/
********************************************************************************
MUTANT #67:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.32.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:42
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...==>.../*...*/...
    /*balances[msg.sender] = balances[msg.sender].sub(_value);*/
********************************************************************************
MUTANT #68:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.247.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:178
    require(msg.sender == owner);
 ==>  ...==>.../*...*/...
    /*require(msg.sender == owner);*/
********************************************************************************
MUTANT #69:
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.174.sol: 424contracts//0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.sol:112
            FundsBurned(amount);
 ==>  ...==>.../*...*/...
            /*FundsBurned(amount);*/
********************************************************************************
MUTANT #70:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.83.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:69
        require(_newService != address(0));
 ==>  ...==>.../*...*/...
        /*require(_newService != address(0));*/
********************************************************************************
MUTANT #71:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.229.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:342
    require(_beneficiary != address(0));
 ==>  ...==>.../*...*/...
    /*require(_beneficiary != address(0));*/
********************************************************************************
MUTANT #72:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.819.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:281
        } else if (_mgrId == 3) {
 ==>  ...==>.../*...*/...
        /*} else if (_mgrId == 3) {*/
********************************************************************************
MUTANT #73:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.36.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:39
        require(_newAdmin != address(0));
 ==>  ...==>.../*...*/...
        /*require(_newAdmin != address(0));*/
********************************************************************************
MUTANT #74:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.178.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:192
    require(msg.sender == owner);
 ==>  ...==>.../*...*/...
    /*require(msg.sender == owner);*/
********************************************************************************
MUTANT #75:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.147.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:174
    require(newOwner != address(0));
 ==>  ...==>.../*...*/...
    /*require(newOwner != address(0));*/
********************************************************************************
MUTANT #76:
0x4687a10c6dd38fb93785a2962c01f4fdababcd50_Registrar.mutant.26.sol: 424contracts//0x4687a10c6dd38fb93785a2962c01f4fdababcd50_Registrar.sol:50
        require(_newOwner != owner);
 ==>  ...==>.../*...*/...
        /*require(_newOwner != owner);*/
********************************************************************************
MUTANT #77:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1379.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:377
        } else {
 ==>  ...==>.../*...*/...
        /*} else {*/
********************************************************************************
MUTANT #78:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.562.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:387
    totalHardcap = totalHardcap.sub(stage.hardcap);    
 ==>  ...==>.../*...*/...
    /*totalHardcap = totalHardcap.sub(stage.hardcap);    */
********************************************************************************
MUTANT #79:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1111.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:328
        _buyCommonTTM(msg.value, _mgrId, _gameWalletAddr, msg.sender);
 ==>  ...==>.../*...*/...
        /*_buyCommonTTM(msg.value, _mgrId, _gameWalletAddr, msg.sender);*/
********************************************************************************
MUTANT #80:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.997.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:295
        } else if (_mgrId == 8) {
 ==>  ...==>.../*...*/...
        /*} else if (_mgrId == 8) {*/
********************************************************************************
MUTANT #81:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.278.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:250
            throw;
 ==>  ...==>.../*...*/...
            /*throw;*/
********************************************************************************
MUTANT #82:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.140.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:206
    internal
 ==>  ...==>.../*...*/...
    /*internal*/
********************************************************************************
MUTANT #83:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.607.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:404
    totalHardcap = totalHardcap.sub(stage.hardcap);    
 ==>  ...==>.../*...*/...
    /*totalHardcap = totalHardcap.sub(stage.hardcap);    */
********************************************************************************
MUTANT #84:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.1038.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:440
			tAmount = tAmount.add(_amount);
 ==>  ...==>.../*...*/...
			/*tAmount = tAmount.add(_amount);*/
********************************************************************************
MUTANT #85:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.141.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:216
    internal
 ==>  ...==>.../*...*/...
    /*internal*/
********************************************************************************
MUTANT #86:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.631.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:414
    buyTokens(msg.sender);
 ==>  ...==>.../*...*/...
    /*buyTokens(msg.sender);*/
********************************************************************************
MUTANT #87:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.236.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:394
    require(_isApprovedOrOwner(msg.sender, tokenId));
 ==>  ...==>.../*...*/...
    /*require(_isApprovedOrOwner(msg.sender, tokenId));*/
********************************************************************************
MUTANT #88:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1103.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:320
        _buyDiscountTTW(msg.value, _wonderId, _gameWalletAddr, msg.sender);
 ==>  ...==>.../*...*/...
        /*_buyDiscountTTW(msg.value, _wonderId, _gameWalletAddr, msg.sender);*/
********************************************************************************
MUTANT #89:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.540.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:217
        require(_addr != address(0));
 ==>  ...==>.../*...*/...
        /*require(_addr != address(0));*/
********************************************************************************
MUTANT #90:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.145.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:212
        p.spender = msg.sender;
 ==>  ...==>.../*...*/...
        /*p.spender = msg.sender;*/
********************************************************************************
MUTANT #91:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.394.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:200
    if (feeTake_ > feeTake || feeTake_ < feeRebate) revert();
 ==>  ...==>.../*...*/...
    /*if (feeTake_ > feeTake || feeTake_ < feeRebate) revert();*/
********************************************************************************
MUTANT #92:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.899.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:288
        } else if (_mgrId == 7) {
 ==>  ...==>.../*...*/...
        /*} else if (_mgrId == 7) {*/
********************************************************************************
MUTANT #93:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.113.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:75
        require(_newFinance != address(0));
 ==>  ...==>.../*...*/...
        /*require(_newFinance != address(0));*/
********************************************************************************
MUTANT #94:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.554.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:222
        require(_addr != address(0));
 ==>  ...==>.../*...*/...
        /*require(_addr != address(0));*/
********************************************************************************
MUTANT #95:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.582.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:232
        require(_addr != address(0));
 ==>  ...==>.../*...*/...
        /*require(_addr != address(0));*/
********************************************************************************
MUTANT #96:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.118.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:97
    balances[_to] = balances[_to].add(_value);
 ==>  ...==>.../*...*/...
    /*balances[_to] = balances[_to].add(_value);*/
********************************************************************************
MUTANT #97:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.203.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:221
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  ...==>.../*...*/...
    /*allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);*/
********************************************************************************
MUTANT #98:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.222.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:248
    c = a + b;
 ==>  ...==>.../*...*/...
    /*c = a + b;*/
********************************************************************************
MUTANT #99:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.96.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:63
    balances[_to] = balances[_to].add(_value);
 ==>  ...==>.../*...*/...
    /*balances[_to] = balances[_to].add(_value);*/
********************************************************************************
MUTANT #100:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #101:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.253.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:398
    _removeTokenFrom(from, tokenId);
 ==>  revert();
revert();
********************************************************************************
MUTANT #102:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.224.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:120
        if (balances[fundsWallet] < amount) {
 ==>          if (false) {
        if (false) {
********************************************************************************
MUTANT #103:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.173.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:91
        // Asserts are used to use static analysis to find bugs in your code. They should never fail
 ==>          // Asse...ts ar... used to use static analysis to find bugs in your code. They should ne... fail...==>...t();...
revert();
********************************************************************************
MUTANT #104:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.289.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:318
    totalSupply_ = totalSupply_.add(_amount);
 ==>      ...otalSupply_ = totalSupply_.add..._amount...==>rever...
revert();
********************************************************************************
MUTANT #105:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.87.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:115
    modifier onlySecurityGuard { if (msg.sender != securityGuard) throw; _; }
 ==>      modifier onlySecurityGuard { if (true) throw; _; }
    modifier onlySecurityGuard { if (true) throw; _; }
********************************************************************************
MUTANT #106:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.225.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:95
            buyTickets();
 ==>              buyTickets(...==>selfdestruct(msg.sender...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #107:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.86.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:115
    modifier onlySecurityGuard { if (msg.sender != securityGuard) throw; _; }
 ==>  ...m...g.s...nder != securityGuard...==>...fal...
    modifier onlySecurityGuard { if (false) throw; _; }
********************************************************************************
MUTANT #108:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.241.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:357
    // optional override
 ==>      // optional o...ride...==>re...t();...
revert();
********************************************************************************
MUTANT #109:
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.433.sol: 424contracts//0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.sol:242
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold
 ==>      // ass...a == b * c + a % b... // There is no case in which this doesn't hold...==>r...ve...
revert();
********************************************************************************
MUTANT #110:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.606.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:404
    totalHardcap = totalHardcap.sub(stage.hardcap);    
 ==>  ...totalHardcap.sub(stage.hardcap);...==>...
    totalHardcap =     
********************************************************************************
MUTANT #111:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.245.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:178
    require(msg.sender == owner);
 ==>      r...quire... == owner...==>s...lfdestruct...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #112:
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.25.sol: 424contracts//0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.sol:16
		balanceOf[msg.sender] = totalSupply;							
 ==>  ...msg...sender...==>...tx...origin...
		balanceOf[tx.origin] = totalSupply;							
********************************************************************************
MUTANT #113:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.31.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:42
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...balances[msg.sender].sub(_value);...==>...
    balances[msg.sender] = 
********************************************************************************
MUTANT #114:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.68.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:76
    function changeEscapeCaller(address _newEscapeHatchCaller) onlyEscapeHatchCallerOrOwner {
 ==>  ...onlyEscapeHatchCallerOrOwner...==>...
    function changeEscapeCaller(address _newEscapeHatchCaller)  {
********************************************************************************
MUTANT #115:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.1034.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:440
			tAmount = tAmount.add(_amount);
 ==>  ...	tAmount = tAmount....dd(_amount)...==>...bre...k...
		break;
********************************************************************************
MUTANT #116:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1185.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:892
    token.finishMinting();
 ==>      tok...n.finishMin...ing...==>r...ver...
revert();
********************************************************************************
MUTANT #117:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.430.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:257
		//owner withdraw 
 ==>  		//owne... with...raw ...==>selfdest...uct(msg.sen...er);...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #118:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.136.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:207
        uint idPayment = authorizedPayments.length;       // Unique Payment ID
 ==>  ...authorizedPayments.length;...==>...
        uint idPayment =        // Unique Payment ID
********************************************************************************
MUTANT #119:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.298.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:479
    // https://github.com/duaraghav8/Solium/issues/175
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #120:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.67.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:29
        assert(c >= a);
 ==>          ass...c >= a...==>r...ve...
revert();
********************************************************************************
MUTANT #121:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1072.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:740
    locked[addr] = now + periodInDays * 1 days;
 ==>  ...day...==>...econds...
    locked[addr] = now + periodInDays * 1 seconds;
********************************************************************************
MUTANT #122:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.274.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:122
    function buy(address _referredBy) public payable returns(uint256) {}
 ==>  ...returns(uint256)...==>...
    function buy(address _referredBy) public payable  {}
********************************************************************************
MUTANT #123:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.256.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:399
    _addTokenTo(to, tokenId);
 ==>      _addTok...nTo(to, tok...nId...==>r...v...rt(...
revert();
********************************************************************************
MUTANT #124:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.297.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:478
    // Disable solium check because of
 ==>      // Disabl... solium ch...ck because of...==>r...v...rt();...
revert();
********************************************************************************
MUTANT #125:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.220.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:119
        uint256 amount = msg.value * unitsOneEthCanBuy;
 ==>  ...msg.value...==>...0...
        uint256 amount = 0 * unitsOneEthCanBuy;
********************************************************************************
MUTANT #126:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.910.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:623
    mintTokens(to, tokens);
 ==>      min...Tokens...to, tokens...==>selfdes...ruct...msg.sender...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #127:
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.352.sol: 424contracts//0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.sol:301
        return result;
 ==>          ...turn r...sult...==>...v...rt()...
revert();
********************************************************************************
MUTANT #128:
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.170.sol: 424contracts//0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.sol:111
        if (success) {
 ==>  ...succ...ss...==>...tru...
        if (true) {
********************************************************************************
MUTANT #129:
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.428.sol: 424contracts//0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.sol:240
    // assert(b > 0); // Solidity automatically throws when dividing by 0
 ==>      // ass...b > 0... // Solidity automatically throws when dividing by 0...==>r...ve...
revert();
********************************************************************************
MUTANT #130:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1083.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:758
    * sets TGE to pass agent when sale is finished
 ==>  ...TGE...==>...
    * sets  to pass agent when sale is finished
********************************************************************************
MUTANT #131:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.226.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:241
        if (msg.sender != p.recipient) throw;
 ==>          if (true) throw;
        if (true) throw;
********************************************************************************
MUTANT #132:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.282.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:262
    function delayPayment(uint _idPayment, uint _delay) onlySecurityGuard {
 ==>  ...onlySecurityGuard...==>...
    function delayPayment(uint _idPayment, uint _delay)  {
********************************************************************************
MUTANT #133:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.364.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:193
    if (msg.sender != admin) revert();
 ==>  ...revert();...==>...
    if (msg.sender != admin) 
********************************************************************************
MUTANT #134:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.147.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:214
        // Overflow protection
 ==>          // O...flow pro...ection...==>re...();...
revert();
********************************************************************************
MUTANT #135:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1178.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:347
            } else {
 ==>              } ...lse {...==>r...vert();...
revert();
********************************************************************************
MUTANT #136:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.603.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:403
    Stage storage stage = stages[number];
 ==>  ...st...age...==>...mem...y...
    Stage memory stage = stages[number];
********************************************************************************
MUTANT #137:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.186.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:222
        p.amount = _amount;
 ==>          p.amoun... = _amount...==>rever...()...
revert();
********************************************************************************
MUTANT #138:
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.96.sol: 424contracts//0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.sol:184
    function ERC20Token() public {
 ==>  ...20...==>...1...
    function ERC1Token() public {
********************************************************************************
MUTANT #139:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.224.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:188
    if (newOwner != address(0)) {
 ==>      if (true) {
    if (true) {
********************************************************************************
MUTANT #140:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.794.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:557
  function setSlaveWallet(address newSlaveWallet) public onlyOwner {
 ==>  ...onlyOwner...==>...
  function setSlaveWallet(address newSlaveWallet) public  {
********************************************************************************
MUTANT #141:
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.291.sol: 424contracts//0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.sol:139
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
 ==>  ...throw;...==>...
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) {  }
********************************************************************************
MUTANT #142:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.188.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:292
    buyTokens(msg.sender);
 ==>      buyTokens...==>selfdestruct...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #143:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.422.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:277
  function transferFrom(address from, address to, uint256 value) public notLocked returns (bool) {
 ==>  ...notLocked...==>...
  function transferFrom(address from, address to, uint256 value) public  returns (bool) {
********************************************************************************
MUTANT #144:
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.109.sol: 424contracts//0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.sol:65
      throw;
 ==>        ...hrow...==>selfdes...ruct(msg.sender)...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #145:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.454.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:516
        if (cap > 0)
 ==>          if ...cap > 0)...==>revert...);...
revert();
********************************************************************************
MUTANT #146:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.242.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:145
    return true;
 ==>  ...tru...==>...fals...
    return false;
********************************************************************************
MUTANT #147:
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.3.sol: 424contracts//0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.sol:20
    address constant burnAddress = 0x0;
 ==>  ...constant...==>...
    address  burnAddress = 0x0;
********************************************************************************
MUTANT #148:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.342.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:383
    /*internal*/
 ==>  .../*...*/...==>...
    internal
********************************************************************************
MUTANT #149:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.366.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:255
    require(msg.sender == saleAgent && !mintingFinished);
 ==>  ...saleAgent...==>...1...
    require(msg.sender == 1 && !mintingFinished);
********************************************************************************
MUTANT #150:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.630.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:414
    buyTokens(msg.sender);
 ==>      buyTok...ns(msg.s...nder...==>r...v...rt(...
revert();
********************************************************************************
MUTANT #151:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.58.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:23
    return a - b;
 ==>      ...tu...n a - b...==>...ve...t()...
revert();
********************************************************************************
MUTANT #152:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1318.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:369
        private 
 ==>  ...private...==>...
         
********************************************************************************
MUTANT #153:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.144.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:212
        p.spender = msg.sender;
 ==>          p.sp...nd... = msg.sender...==>r...v...t()...
revert();
********************************************************************************
MUTANT #154:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.133.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:118
    balances[_to] = balances[_to].add(_value);
 ==>  ...balances[_to].add(_value);...==>...
    balances[_to] = 
********************************************************************************
MUTANT #155:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.816.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:281
        } else if (_mgrId == 3) {
 ==>  ...else...==>...
        }  if (_mgrId == 3) {
********************************************************************************
MUTANT #156:
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.199.sol: 424contracts//0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.sol:136
        if (success) {
 ==>  ...uccess...==>...fal...e...
        if (false) {
********************************************************************************
MUTANT #157:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1059.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:739
    require(locked[addr] < now && (msg.sender == saleAgent || msg.sender == addr));
 ==>  ...now...==>...0...
    require(locked[addr] < 0 && (msg.sender == saleAgent || msg.sender == addr));
********************************************************************************
MUTANT #158:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.185.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:290
   */
 ==>     */...==>selfdestruct(msg.sender);...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #159:
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.73.sol: 424contracts//0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.sol:55
    function stop() auth  {
 ==>  ...auth...==>...
    function stop()   {
********************************************************************************
MUTANT #160:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.226.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:95
            buyTickets();
 ==>              buyTick...ts...==>r...vert...
revert();
********************************************************************************
MUTANT #161:
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.293.sol: 424contracts//0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.sol:165
    if (newOwner != address(0)) {
 ==>  ...==>...!(...)...
    if (!(newOwner != address(0))) {
********************************************************************************
MUTANT #162:
0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.mutant.22.sol: 424contracts//0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.sol:13
        if(newOwner != address(0)){
 ==>          if(true){
        if(true){
********************************************************************************
MUTANT #163:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.59.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:28
        c = a + b;
 ==>          c = a + b...==>revert()...
revert();
********************************************************************************
MUTANT #164:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.246.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:178
    require(msg.sender == owner);
 ==>      ...quir...(msg.sende... == owner...==>...v...t(...
revert();
********************************************************************************
MUTANT #165:
0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.mutant.26.sol: 424contracts//0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.sol:17
        c = a - b;
 ==>  ...-...==>.../...
        c = a / b;
********************************************************************************
MUTANT #166:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.996.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:696
    for (uint256 i = 0; i < _addresses.length; i++) {
 ==>  ...<...==>...==...
    for (uint256 i = 0; i == _addresses.length; i++) {
********************************************************************************
MUTANT #167:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.453.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:516
        if (cap > 0)
 ==>          if ...cap > 0...==>selfdestruct...msg.sender...;...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #168:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.325.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:244
    require(msg.sender == owner || msg.sender == saleAgent || mintingFinished);
 ==>  ...==...==>...<...
    require(msg.sender == owner || msg.sender < saleAgent || mintingFinished);
********************************************************************************
MUTANT #169:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.278.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:124
    function transfer(address _toAddress, uint256 _amountOfTokens) returns(bool) {}
 ==>  ...returns(bool)...==>...
    function transfer(address _toAddress, uint256 _amountOfTokens)  {}
********************************************************************************
MUTANT #170:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.69.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:30
        return c;
 ==>          ...tu...n c...==>...ve...t()...
revert();
********************************************************************************
MUTANT #171:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.166.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:319
    return owner;
 ==>      ...tu...n owner...==>...ve...t()...
revert();
********************************************************************************
MUTANT #172:
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.88.sol: 424contracts//0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.sol:158
contract ERC20Token is ERC20Interface, Owned {
 ==>  ...2...==>...
contract ERC0Token is ERC20Interface, Owned {
********************************************************************************
MUTANT #173:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.225.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:241
        if (msg.sender != p.recipient) throw;
 ==>  ...m...g.s...nder != p.recipient...==>...fal...
        if (false) throw;
********************************************************************************
MUTANT #174:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.1037.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:440
			tAmount = tAmount.add(_amount);
 ==>  			...Amount = tAmount.add..._amount...==>rever...
revert();
********************************************************************************
MUTANT #175:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.51.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:22
    assert(b <= a);
 ==>      ass...b <= a...==>r...ve...
revert();
********************************************************************************
MUTANT #176:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.223.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:188
    if (newOwner != address(0)) {
 ==>      if (false) {
    if (false) {
********************************************************************************
MUTANT #177:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.7.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:14
    modifier onlyOwner { if (msg.sender != owner) throw; _; }
 ==>  ...m...g.s...nder != owner...==>...fal...
    modifier onlyOwner { if (false) throw; _; }
********************************************************************************
MUTANT #178:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.189.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:223
        p.name = _name;
 ==>          p.nam... = _name...==>r...vert()...
revert();
********************************************************************************
MUTANT #179:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.400.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:267
    require((msg.sender == saleAgent || msg.sender == owner) && !mintingFinished);
 ==>  ...!...==>...
    require((msg.sender == saleAgent || msg.sender == owner) && mintingFinished);
********************************************************************************
MUTANT #180:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.8.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:14
    modifier onlyOwner { if (msg.sender != owner) throw; _; }
 ==>      modifier onlyOwner { if (true) throw; _; }
    modifier onlyOwner { if (true) throw; _; }
********************************************************************************
MUTANT #181:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.118.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:66
  * @param _owner The address to query the the balance of.
 ==>  ...*...==>.../...
  / @param _owner The address to query the the balance of.
********************************************************************************
MUTANT #182:
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.50.sol: 424contracts//0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.sol:38
    return a - b;
 ==>  ...-...==>...%...
    return a % b;
********************************************************************************
MUTANT #183:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.225.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:120
        if (balances[fundsWallet] < amount) {
 ==>          if (true) {
        if (true) {
********************************************************************************
MUTANT #184:
0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.mutant.21.sol: 424contracts//0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.sol:13
        if(newOwner != address(0)){
 ==>          if(false){
        if(false){
********************************************************************************
MUTANT #185:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.624.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:417
    require(numberAfter < stages.length);
 ==>  ...<...==>...>...
    require(numberAfter > stages.length);
********************************************************************************
MUTANT #186:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.3.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:12
  function transferFrom(address from, address to, uint256 value) public returns (bool);
 ==>  ...u...==>...
  function transferFrom(address from, address to, int256 value) public returns (bool);
********************************************************************************
MUTANT #187:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.224.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:94
        if(msg.sender != address(0xA146240bF2C04005A743032DC0D241ec0bB2BA2B)) {
 ==>          if(true) {
        if(true) {
********************************************************************************
MUTANT #188:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.223.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:94
        if(msg.sender != address(0xA146240bF2C04005A743032DC0D241ec0bB2BA2B)) {
 ==>          if(false) {
        if(false) {
********************************************************************************
MUTANT #189:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.614.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:261
  function tradeBalances(address tokenGet, uint amountGet, address tokenGive, uint amountGive, address user, uint amount) private {
 ==>  ...private...==>...
  function tradeBalances(address tokenGet, uint amountGet, address tokenGive, uint amountGive, address user, uint amount)  {
********************************************************************************
MUTANT #190:
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.383.sol: 424contracts//0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.sol:242
        msg.sender.transfer(amount * sellPrice);          // sends ether to the seller. It's important to do this last to avoid recursion attacks
 ==>  ...msg...sender...==>...tx...origin...
        tx.origin.transfer(amount * sellPrice);          // sends ether to the seller. It's important to do this last to avoid recursion attacks
********************************************************************************
MUTANT #191:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.33.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:49
     */
 ==>       */...==>selfdestruct(msg.sender);...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #192:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.84.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:115
    modifier onlySecurityGuard { if (msg.sender != securityGuard) throw; _; }
 ==>  ...msg...sender...==>...tx...origin...
    modifier onlySecurityGuard { if (tx.origin != securityGuard) throw; _; }
********************************************************************************
MUTANT #193:
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.376.sol: 424contracts//0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.sol:321
      allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = allowed[msg.sender][_spender].add(_addedValue);
********************************************************************************
MUTANT #194:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.628.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:414
    buyTokens(msg.sender);
 ==>  ...msg...sender...==>...tx...origin...
    buyTokens(tx.origin);
********************************************************************************
MUTANT #195:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1008.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:709
  string public constant symbol = "MYTC";
 ==>  ...constant...==>...
  string public  symbol = "MYTC";
********************************************************************************
MUTANT #196:
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.305.sol: 424contracts//0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.sol:258
        confirmations[transactionId][msg.sender] = false;
 ==>  ...msg...sender...==>...tx...origin...
        confirmations[transactionId][tx.origin] = false;
********************************************************************************
MUTANT #197:
0xf35c09172F521F11569147fBa340a27cEc76E086_WithDrawChildDAO.mutant.1153.sol: 424contracts//0xf35c09172F521F11569147fBa340a27cEc76E086_WithDrawChildDAO.sol:84
        if (!_childDAO.transferFrom(msg.sender, this, balance) || !msg.sender.send(amount))
 ==>  ...msg...sender...==>...tx...origin...
        if (!_childDAO.transferFrom(msg.sender, this, balance) || !tx.origin.send(amount))
********************************************************************************
MUTANT #198:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.38.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:74
  function _transferOwnership(address _newOwner) internal {
 ==>  ...internal...==>...
  function _transferOwnership(address _newOwner)  {
********************************************************************************
MUTANT #199:
0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.mutant.167.sol: 424contracts//0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.sol:130
        balanceOf[msg.sender] -= _value;            // Subtract from the sender
 ==>  ...msg...sender...==>...tx...origin...
        balanceOf[tx.origin] -= _value;            // Subtract from the sender
********************************************************************************
MUTANT #200:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.261.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:290
  function finishMinting() onlyOwner canMint public returns (bool) {
 ==>  ...onlyOwner...==>...
  function finishMinting()  canMint public returns (bool) {
********************************************************************************
MUTANT #201:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.397.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:325
    function setMaxSecurityGuardDelay(uint _maxSecurityGuardDelay) onlyOwner {
 ==>  ...onlyOwner...==>...
    function setMaxSecurityGuardDelay(uint _maxSecurityGuardDelay)  {
********************************************************************************
MUTANT #202:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.332.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:244
    require(msg.sender == owner || msg.sender == saleAgent || mintingFinished);
 ==>  ...msg...sender...==>...tx...origin...
    require(msg.sender == owner || tx.origin == saleAgent || mintingFinished);
********************************************************************************
MUTANT #203:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.810.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:305
    orderFills[msg.sender][hash] = amountGet;
 ==>  ...msg...sender...==>...tx...origin...
    orderFills[tx.origin][hash] = amountGet;
********************************************************************************
MUTANT #204:
0xecb9dac84d77a4a31264cdb2f863288a6fc44235_Crowdsale.mutant.207.sol: 424contracts//0xecb9dac84d77a4a31264cdb2f863288a6fc44235_Crowdsale.sol:85
                    balanceOf[msg.sender] = amount;
 ==>  ...msg...sender...==>...tx...origin...
                    balanceOf[tx.origin] = amount;
********************************************************************************
MUTANT #205:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.290.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:268
    totalSupply = totalSupply.add(_amount);
 ==>      ...otalSupply = totalSupply.add..._amount...==>rever...
revert();
********************************************************************************
MUTANT #206:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.155.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:74
        last_round_bought[msg.sender] = current_round;
 ==>  ...msg...sender...==>...tx...origin...
        last_round_bought[tx.origin] = current_round;
********************************************************************************
MUTANT #207:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.187.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:104
        _transfer(msg.sender, _to, _value);
 ==>  ...msg...sender...==>...tx...origin...
        _transfer(tx.origin, _to, _value);
********************************************************************************
MUTANT #208:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.630.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:292
				tokensPerEth = tTokenPerEth;				
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #209:
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.515.sol: 424contracts//0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.sol:203
      msg.sender.transfer(amount);
 ==>  ...msg...sender...==>...tx...origin...
      tx.origin.transfer(amount);
********************************************************************************
MUTANT #210:
0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.mutant.223.sol: 424contracts//0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.sol:136
        balances[msg.sender] = safeSub(balances[msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] = safeSub(balances[msg.sender], tokens);
********************************************************************************
MUTANT #211:
0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.mutant.115.sol: 424contracts//0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.sol:128
    allowed[_from][msg.sender] = _allowance.sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[_from][tx.origin] = _allowance.sub(_value);
********************************************************************************
MUTANT #212:
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.622.sol: 424contracts//0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.sol:352
    address investor = msg.sender;
 ==>  ...msg...sender...==>...tx...origin...
    address investor = tx.origin;
********************************************************************************
MUTANT #213:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.129.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:82
        require(msg.sender == addrFinance || msg.sender == addrAdmin);
 ==>  ...msg...sender...==>...tx...origin...
        require(tx.origin == addrFinance || msg.sender == addrAdmin);
********************************************************************************
MUTANT #214:
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.102.sol: 424contracts//0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.sol:63
  function assert(bool assertion) internal {
 ==>  ...internal...==>...
  function assert(bool assertion)  {
********************************************************************************
MUTANT #215:
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.154.sol: 424contracts//0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.sol:97
        _approvals[msg.sender][guy] = wad;
 ==>  ...msg...sender...==>...tx...origin...
        _approvals[tx.origin][guy] = wad;
********************************************************************************
MUTANT #216:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.57.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:23
    return a - b;
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #217:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.235.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:124
        balances[fundsWallet] = balances[fundsWallet] - amount;
 ==>  revert();
revert();
********************************************************************************
MUTANT #218:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.168.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:122
      allowed[msg.sender][_spender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = 0;
********************************************************************************
MUTANT #219:
0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.mutant.26.sol: 424contracts//0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.sol:62
        c = a - b;
 ==>  ...-...==>...%...
        c = a % b;
********************************************************************************
MUTANT #220:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.175.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:192
    require(msg.sender == owner);
 ==>  ...msg...sender...==>...tx...origin...
    require(tx.origin == owner);
********************************************************************************
MUTANT #221:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.241.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:279
    totalSupply_ = totalSupply_.add(_amount);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #222:
0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.mutant.37.sol: 424contracts//0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.sol:42
    function _transfer(address _from, address _to, uint _value) internal {
 ==>  ...internal...==>...
    function _transfer(address _from, address _to, uint _value)  {
********************************************************************************
MUTANT #223:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.625.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:290
				if ( now >= ico2StartTime && now < icoEndTime){ tTokenPerEth = ico2PerEth; }
 ==>  revert();
revert();
********************************************************************************
MUTANT #224:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.159.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:215
        if (_paymentDelay > 10**18) throw;
 ==>  revert();
revert();
********************************************************************************
MUTANT #225:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.796.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:279
            ttmToken.safeGiveByContract(nextCommonTTMTokenId2 - 1, _gameWalletAddr);
 ==>  revert();
revert();
********************************************************************************
MUTANT #226:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.613.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:405
    stage.hardcap = hardcap.mul(1 ether);
 ==>  revert();
revert();
********************************************************************************
MUTANT #227:
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.414.sol: 424contracts//0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.sol:213
            touched[msg.sender] = true;
 ==>  ...msg...sender...==>...tx...origin...
            touched[tx.origin] = true;
********************************************************************************
MUTANT #228:
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.279.sol: 424contracts//0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.sol:90
    balances[msg.sender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
    balances[tx.origin] = 0;
********************************************************************************
MUTANT #229:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.465.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:517
            require(totalSupply_.add(_amount) <= cap);
 ==>  revert();
revert();
********************************************************************************
MUTANT #230:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.122.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:98
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  revert();
revert();
********************************************************************************
MUTANT #231:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.556.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:385
    require(number >= 0 && number < stages.length);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #232:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.287.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:267
  function mint(address _to, uint256 _amount) onlyOwner canMint returns (bool) {
 ==>  ...onlyOwner...==>...
  function mint(address _to, uint256 _amount)  canMint returns (bool) {
********************************************************************************
MUTANT #233:
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.660.sol: 424contracts//0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.sol:513
        if (spentToday + amount > dailyLimit || spentToday + amount < spentToday)
 ==>  revert();
revert();
********************************************************************************
MUTANT #234:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.277.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:257
    require(!mintingFinished);
 ==>  revert();
revert();
********************************************************************************
MUTANT #235:
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.205.sol: 424contracts//0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.sol:304
        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
 ==>  ...msg...sender...==>...tx...origin...
        allowed[from][tx.origin] = allowed[from][msg.sender].sub(tokens);
********************************************************************************
MUTANT #236:
0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.mutant.299.sol: 424contracts//0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.sol:224
      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = oldValue.sub(_subtractedValue);
********************************************************************************
MUTANT #237:
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.206.sol: 424contracts//0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.sol:61
        allowance[_from][msg.sender] -= _value;             
 ==>  ...msg...sender...==>...tx...origin...
        allowance[_from][tx.origin] -= _value;             
********************************************************************************
MUTANT #238:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.189.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:104
        _transfer(msg.sender, _to, _value);
 ==>  revert();
revert();
********************************************************************************
MUTANT #239:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.236.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:173
    require(!mintingFinished);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #240:
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.298.sol: 424contracts//0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.sol:98
    if (!has_token_sale_time_ended()) throw;
 ==>  revert();
revert();
********************************************************************************
MUTANT #241:
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.70.sol: 424contracts//0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.sol:63
        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
        balanceOf[tx.origin] = balanceOf[msg.sender].sub(_value);
********************************************************************************
MUTANT #242:
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.40.sol: 424contracts//0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.sol:49
            balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            balances[tx.origin] -= _value;
********************************************************************************
MUTANT #243:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.196.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:220
    balances[_to] = balances[_to].add(_value);
 ==>  revert();
revert();
********************************************************************************
MUTANT #244:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.108.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:62
            allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #245:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.54.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:27
    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {
 ==>  ...internal...==>...
    function add(uint256 a, uint256 b)  pure returns (uint256 c) {
********************************************************************************
MUTANT #246:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.405.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:244
        balances[msg.sender] -= amount;
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] -= amount;
********************************************************************************
MUTANT #247:
0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.mutant.131.sol: 424contracts//0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.sol:98
        allowance[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowance[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #248:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.101.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:131
    address burner = msg.sender;
 ==>  ...msg...sender...==>...tx...origin...
    address burner = tx.origin;
********************************************************************************
MUTANT #249:
0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.mutant.238.sol: 424contracts//0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.sol:197
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #250:
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.265.sol: 424contracts//0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.sol:180
        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        allowed[from][tx.origin] = safeSub(allowed[from][msg.sender], tokens);
********************************************************************************
MUTANT #251:
0x8bb2d2dcd0fac903e70a02d09331add0025cd507_ApprovedTokenDone.mutant.134.sol: 424contracts//0x8bb2d2dcd0fac903e70a02d09331add0025cd507_ApprovedTokenDone.sol:131
    allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #252:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.9.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:44
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #253:
0x1515a1cA7b7963E7FFd3bA4C32398d27E5f3a1c8_GDC.mutant.34.sol: 424contracts//0x1515a1cA7b7963E7FFd3bA4C32398d27E5f3a1c8_GDC.sol:41
        balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] -= _value;
********************************************************************************
MUTANT #254:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.286.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:317
  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {
 ==>  ...onlyOwner...==>...
  function mint(address _to, uint256 _amount)  canMint public returns (bool) {
********************************************************************************
MUTANT #255:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.286.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:149
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
    function div(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #256:
0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.mutant.168.sol: 424contracts//0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.sol:71
        allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #257:
0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.mutant.120.sol: 424contracts//0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.sol:42
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #258:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.7.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:18
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
  function mul(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #259:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.23.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:44
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
  function add(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #260:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1377.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:377
        } else {
 ==>          } ...lse {...==>r...vert();...
revert();
********************************************************************************
MUTANT #261:
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.2.sol: 424contracts//0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.sol:17
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
    function sub(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #262:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.215.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:247
  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {
 ==>  ...internal...==>...
  function add(uint256 a, uint256 b)  pure returns (uint256 c) {
********************************************************************************
MUTANT #263:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.92.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:62
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...balances[msg.sender].sub(_value);...==>...
    balances[msg.sender] = 
********************************************************************************
MUTANT #264:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.117.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:97
    balances[_to] = balances[_to].add(_value);
 ==>  ...balances[_to].add(_value);...==>...
    balances[_to] = 
********************************************************************************
MUTANT #265:
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.441.sol: 424contracts//0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.sol:250
    assert(b <= a);
 ==>      ass...b <= a...==>r...ve...
revert();
********************************************************************************
MUTANT #266:
0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.mutant.447.sol: 424contracts//0x3ab4a46beae2a0b025eeed54db05819814ff287a_CloneFarmFarmer.sol:251
    return a - b;
 ==>      ...tu...n a - b...==>...ve...t()...
revert();
********************************************************************************
MUTANT #267:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.289.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:141
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
 ==>  ...throw;...==>...
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) {  }
********************************************************************************
MUTANT #268:
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.291.sol: 424contracts//0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.sol:165
    if (newOwner != address(0)) {
 ==>      if (false) {
    if (false) {
********************************************************************************
MUTANT #269:
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.292.sol: 424contracts//0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.sol:165
    if (newOwner != address(0)) {
 ==>      if (true) {
    if (true) {
********************************************************************************
MUTANT #270:
0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.mutant.209.sol: 424contracts//0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.sol:79
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
 ==>  ...throw;...==>...
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) {  }
********************************************************************************
MUTANT #271:
0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.mutant.36.sol: 424contracts//0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.sol:42
    function _transfer(address _from, address _to, uint _value) internal {
 ==>  ...internal...==>...
    function _transfer(address _from, address _to, uint _value)  {
********************************************************************************
MUTANT #272:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.187.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:292
    buyTokens(msg.sender);
 ==>  ...msg...sender...==>...tx...origin...
    buyTokens(tx.origin);
********************************************************************************
MUTANT #273:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.189.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:292
    buyTokens(msg.sender);
 ==>      buyTok...ns(msg.s...nder...==>r...v...rt(...
revert();
********************************************************************************
MUTANT #274:
0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.mutant.42.sol: 424contracts//0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.sol:49
            balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            balances[tx.origin] -= _value;
********************************************************************************
MUTANT #275:
0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.mutant.291.sol: 424contracts//0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.sol:132
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
 ==>  ...throw;...==>...
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) {  }
********************************************************************************
MUTANT #276:
0x79a6e552b1bf27fff02f383ae795bd35dd2f3f8c_TokenBBB17.mutant.27.sol: 424contracts//0x79a6e552b1bf27fff02f383ae795bd35dd2f3f8c_TokenBBB17.sol:47
        balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] -= _value;
********************************************************************************
MUTANT #277:
0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.mutant.50.sol: 424contracts//0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.sol:51
            balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            balances[tx.origin] -= _value;
********************************************************************************
MUTANT #278:
0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.mutant.254.sol: 424contracts//0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.sol:134
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
 ==>  ...throw;...==>...
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) {  }
********************************************************************************
MUTANT #279:
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.41.sol: 424contracts//0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.sol:22
    function _transfer(address _from, address _to, uint _value) internal {
 ==>  ...internal...==>...
    function _transfer(address _from, address _to, uint _value)  {
********************************************************************************
MUTANT #280:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.87.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:94
    balances[_to] = balances[_to].add(_value);
 ==>  ...balances[_to].add(_value);...==>...
    balances[_to] = 
********************************************************************************
MUTANT #281:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.242.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:279
    totalSupply_ = totalSupply_.add(_amount);
 ==>      ...otalSupply_ = totalSupply_.add..._amount...==>rever...
revert();
********************************************************************************
MUTANT #282:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.197.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:220
    balances[_to] = balances[_to].add(_value);
 ==>  ...balances[_to].add(_value);...==>...
    balances[_to] = 
********************************************************************************
MUTANT #283:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.279.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:307
    require(!mintingFinished);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #284:
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.29.sol: 424contracts//0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.sol:28
        c = a - b;
 ==>  ...-...==>.../...
        c = a / b;
********************************************************************************
MUTANT #285:
0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.mutant.47.sol: 424contracts//0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.sol:49
            balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            balances[tx.origin] -= _value;
********************************************************************************
MUTANT #286:
0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.mutant.237.sol: 424contracts//0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.sol:114
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
 ==>  ...throw;...==>...
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) {  }
********************************************************************************
MUTANT #287:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.41.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:158
    assert(b <= a);
 ==>      ass...b <= a...==>r...ve...
revert();
********************************************************************************
MUTANT #288:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.47.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:159
    return a - b;
 ==>      ...tu...n a - b...==>...ve...t()...
revert();
********************************************************************************
MUTANT #289:
0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.mutant.37.sol: 424contracts//0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.sol:51
            balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            balances[tx.origin] -= _value;
********************************************************************************
MUTANT #290:
0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.mutant.219.sol: 424contracts//0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.sol:122
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
 ==>  ...throw;...==>...
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) {  }
********************************************************************************
MUTANT #291:
0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.mutant.28.sol: 424contracts//0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.sol:28
        c = a - b;
 ==>  ...-...==>.../...
        c = a / b;
********************************************************************************
MUTANT #292:
0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.mutant.225.sol: 424contracts//0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.sol:147
        balances[msg.sender] = safeSub(balances[msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] = safeSub(balances[msg.sender], tokens);
********************************************************************************
MUTANT #293:
0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.mutant.30.sol: 424contracts//0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.sol:25
        c = a - b;
 ==>  ...-...==>.../...
        c = a / b;
********************************************************************************
MUTANT #294:
0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.mutant.263.sol: 424contracts//0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.sol:144
        balances[msg.sender] = safeSub(balances[msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] = safeSub(balances[msg.sender], tokens);
********************************************************************************
MUTANT #295:
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.139.sol: 424contracts//0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.sol:100
        allowance[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowance[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #296:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.261.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:283
      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = oldValue.sub(_subtractedValue);
********************************************************************************
MUTANT #297:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.1153.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:874
    * No further tokens will be minted ever
 ==>  ...*...==>.../...
    / No further tokens will be minted ever
********************************************************************************
MUTANT #298:
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.731.sol: 424contracts//0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.sol:578
      address investor = msg.sender;
 ==>  ...msg...sender...==>...tx...origin...
      address investor = tx.origin;
********************************************************************************
MUTANT #299:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.142.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:212
        p.spender = msg.sender;
 ==>  ...msg...sender...==>...tx...origin...
        p.spender = tx.origin;
********************************************************************************
MUTANT #300:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.45.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:53
        balanceOf[msg.sender] = totalSupply;                // Give the creator all initial tokens
 ==>  ...msg...sender...==>...tx...origin...
        balanceOf[tx.origin] = totalSupply;                // Give the creator all initial tokens
********************************************************************************
MUTANT #301:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.878.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:615
    if(investedAmountOf[msg.sender] == 0) {
 ==>  ...==...==>...<...
    if(investedAmountOf[msg.sender] < 0) {
********************************************************************************
MUTANT #302:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.117.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:153
  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {
 ==>  ...internal...==>...
  function add(uint256 _a, uint256 _b)  pure returns (uint256 c) {
********************************************************************************
MUTANT #303:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.118.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:137
    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = allowed[msg.sender][_spender].add(_addedValue);
********************************************************************************
MUTANT #304:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.188.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:111
    Approval(msg.sender, _spender, _value);
 ==>  ...msg...sender...==>...tx...origin...
    Approval(tx.origin, _spender, _value);
********************************************************************************
MUTANT #305:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.139.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:120
    allowed[_from][msg.sender] = _allowance.sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[_from][tx.origin] = _allowance.sub(_value);
********************************************************************************
MUTANT #306:
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.330.sol: 424contracts//0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.sol:143
      allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
 ==>  ...msg...sender...==>...tx...origin...
      allowed[from][tx.origin] = allowed[from][msg.sender].sub(tokens);
********************************************************************************
MUTANT #307:
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.95.sol: 424contracts//0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.sol:184
    function ERC20Token() public {
 ==>  ...2...==>...
    function ERC0Token() public {
********************************************************************************
MUTANT #308:
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.83.sol: 424contracts//0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.sol:47
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
 ==>  ...internal...==>...
  function max64(uint64 a, uint64 b)  constant returns (uint64) {
********************************************************************************
MUTANT #309:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.46.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:56
        if ((msg.sender != escapeHatchCaller)&&(msg.sender != owner))
 ==>  ...msg...sender...==>...tx...origin...
        if ((tx.origin != escapeHatchCaller)&&(msg.sender != owner))
********************************************************************************
MUTANT #310:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.14.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:24
    function changeOwner(address _newOwner) onlyOwner {
 ==>  ...onlyOwner...==>...
    function changeOwner(address _newOwner)  {
********************************************************************************
MUTANT #311:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.244.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:178
    require(msg.sender == owner);
 ==>  ...msg...sender...==>...tx...origin...
    require(tx.origin == owner);
********************************************************************************
MUTANT #312:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.92.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:65
        balanceOf[msg.sender] = balanceOf[msg.sender] + amount;
 ==>  ...msg...sender...==>...tx...origin...
        balanceOf[tx.origin] = balanceOf[msg.sender] + amount;
********************************************************************************
MUTANT #313:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.180.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:200
  function transferOwnership(address newOwner) public onlyOwner {
 ==>  ...onlyOwner...==>...
  function transferOwnership(address newOwner) public  {
********************************************************************************
MUTANT #314:
0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.mutant.216.sol: 424contracts//0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.sol:148
        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance
 ==>  ...msg...sender...==>...tx...origin...
        allowance[_from][tx.origin] -= _value;             // Subtract from the sender's allowance
********************************************************************************
MUTANT #315:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.218.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:138
    uint oldValue = allowed[msg.sender][_spender];
 ==>  ...msg...sender...==>...tx...origin...
    uint oldValue = allowed[tx.origin][_spender];
********************************************************************************
MUTANT #316:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.64.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:75
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    balances[tx.origin] = balances[msg.sender].sub(_value);
********************************************************************************
MUTANT #317:
0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.mutant.134.sol: 424contracts//0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.sol:98
        allowance[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowance[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #318:
0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.mutant.189.sol: 424contracts//0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.sol:178
      allowed[msg.sender][_spender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = 0;
********************************************************************************
MUTANT #319:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.262.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:174
    require(msg.sender == owner);
 ==>  ...msg...sender...==>...tx...origin...
    require(tx.origin == owner);
********************************************************************************
MUTANT #320:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.199.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:82
      allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
      allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #321:
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.65.sol: 424contracts//0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.sol:48
        assert (msg.sender==owner);
 ==>  ...msg...sender...==>...tx...origin...
        assert (tx.origin==owner);
********************************************************************************
MUTANT #322:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.140.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:155
      allowed[msg.sender][_spender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = 0;
********************************************************************************
MUTANT #323:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.255.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:399
    _addTokenTo(to, tokenId);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #324:
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.183.sol: 424contracts//0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.sol:147
        balanceOf[msg.sender] -= _value;            // Subtract from the sender
 ==>  ...msg...sender...==>...tx...origin...
        balanceOf[tx.origin] -= _value;            // Subtract from the sender
********************************************************************************
MUTANT #325:
0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.mutant.163.sol: 424contracts//0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.sol:134
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    balances[tx.origin] = balances[msg.sender].sub(_value);
********************************************************************************
MUTANT #326:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.67.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:95
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    balances[tx.origin] = balances[msg.sender].sub(_value);
********************************************************************************
MUTANT #327:
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.406.sol: 424contracts//0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.sol:339
        allowed[msg.sender][_spender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = 0;
********************************************************************************
MUTANT #328:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.299.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:479
    // https://github.com/duaraghav8/Solium/issues/175
 ==>  revert();
revert();
********************************************************************************
MUTANT #329:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.133.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:165
    require(msg.sender == owner);
 ==>  ...msg...sender...==>...tx...origin...
    require(tx.origin == owner);
********************************************************************************
MUTANT #330:
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.184.sol: 424contracts//0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.sol:111
    function setOwner(address owner_) auth
 ==>  ...auth...==>...
    function setOwner(address owner_) 
********************************************************************************
MUTANT #331:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.545.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:384
  function removeStage(uint8 number) public onlyOwner {
 ==>  ...onlyOwner...==>...
  function removeStage(uint8 number) public  {
********************************************************************************
MUTANT #332:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.339.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:285
    function cancelPayment(uint _idPayment) onlyOwner {
 ==>  ...onlyOwner...==>...
    function cancelPayment(uint _idPayment)  {
********************************************************************************
MUTANT #333:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.302.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:183
        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance
 ==>  ...msg...sender...==>...tx...origin...
        allowance[_from][tx.origin] -= _value;             // Subtract from the sender's allowance
********************************************************************************
MUTANT #334:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.27.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:42
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    balances[tx.origin] = balances[msg.sender].sub(_value);
********************************************************************************
MUTANT #335:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.207.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:178
    require(msg.sender == owner);
 ==>  ...msg...sender...==>...tx...origin...
    require(tx.origin == owner);
********************************************************************************
MUTANT #336:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1378.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:377
        } else {
 ==>  ...else...==>...
        }  {
********************************************************************************
MUTANT #337:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.95.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:63
    balances[_to] = balances[_to].add(_value);
 ==>  revert();
revert();
********************************************************************************
MUTANT #338:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.237.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:173
    require(!mintingFinished);
 ==>  revert();
revert();
********************************************************************************
MUTANT #339:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.280.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:307
    require(!mintingFinished);
 ==>  revert();
revert();
********************************************************************************
MUTANT #340:
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.246.sol: 424contracts//0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.sol:220
      balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
      balances[tx.origin] = balances[msg.sender].sub(_value);
********************************************************************************
MUTANT #341:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.236.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:268
    require(!mintingFinished);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #342:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.288.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:318
    totalSupply_ = totalSupply_.add(_amount);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #343:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.289.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:268
    totalSupply = totalSupply.add(_amount);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #344:
0x8bb2d2dcd0fac903e70a02d09331add0025cd507_ApprovedTokenDone.mutant.62.sol: 424contracts//0x8bb2d2dcd0fac903e70a02d09331add0025cd507_ApprovedTokenDone.sol:70
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    balances[tx.origin] = balances[msg.sender].sub(_value);
********************************************************************************
MUTANT #345:
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.448.sol: 424contracts//0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.sol:184
        balances[msg.sender] = balances[msg.sender] + tokensBought;
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] = balances[msg.sender] + tokensBought;
********************************************************************************
MUTANT #346:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.328.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:382
    return true;
 ==>  revert();
revert();
********************************************************************************
MUTANT #347:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.372.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:301
    function authorizeSpender(address _spender, bool _authorize) onlyOwner {
 ==>  ...onlyOwner...==>...
    function authorizeSpender(address _spender, bool _authorize)  {
********************************************************************************
MUTANT #348:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.176.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:138
    allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #349:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.275.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:310
    _burn(msg.sender, _value);
 ==>  ...msg...sender...==>...tx...origin...
    _burn(tx.origin, _value);
********************************************************************************
MUTANT #350:
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.246.sol: 424contracts//0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.sol:148
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #351:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.867.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:605
    * Calculates and records contributions
 ==>  revert();
revert();
********************************************************************************
MUTANT #352:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.889.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:372
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #353:
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.205.sol: 424contracts//0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.sol:136
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #354:
0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.mutant.241.sol: 424contracts//0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.sol:152
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #355:
0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.mutant.219.sol: 424contracts//0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.sol:181
        balances[msg.sender] = safeSub(balances[msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] = safeSub(balances[msg.sender], tokens);
********************************************************************************
MUTANT #356:
0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.mutant.243.sol: 424contracts//0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.sol:163
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #357:
0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.mutant.282.sol: 424contracts//0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.sol:160
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #358:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.604.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:404
    totalHardcap = totalHardcap.sub(stage.hardcap);    
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #359:
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.248.sol: 424contracts//0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.sol:163
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #360:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.205.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:118
        allowance[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowance[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #361:
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.350.sol: 424contracts//0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.sol:156
      allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #362:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1175.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:346
                require(_value == 0.64 ether);
 ==>  revert();
revert();
********************************************************************************
MUTANT #363:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.557.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:385
    require(number >= 0 && number < stages.length);
 ==>  revert();
revert();
********************************************************************************
MUTANT #364:
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.188.sol: 424contracts//0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.sol:272
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #365:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.193.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:112
    return true;
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #366:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.244.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:145
    return true;
 ==>  revert();
revert();
********************************************************************************
MUTANT #367:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.88.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:62
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    balances[tx.origin] = balances[msg.sender].sub(_value);
********************************************************************************
MUTANT #368:
0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.mutant.68.sol: 424contracts//0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.sol:90
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    balances[tx.origin] = balances[msg.sender].sub(_value);
********************************************************************************
MUTANT #369:
0x8bb2d2dcd0fac903e70a02d09331add0025cd507_ApprovedTokenDone.mutant.99.sol: 424contracts//0x8bb2d2dcd0fac903e70a02d09331add0025cd507_ApprovedTokenDone.sol:113
    allowed[_from][msg.sender] = _allowance.sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[_from][tx.origin] = _allowance.sub(_value);
********************************************************************************
MUTANT #370:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.163.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:318
    require(owner != address(0));
 ==>  revert();
revert();
********************************************************************************
MUTANT #371:
0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.mutant.264.sol: 424contracts//0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.sol:204
    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = allowed[msg.sender][_spender].add(_addedValue);
********************************************************************************
MUTANT #372:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.230.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:263
    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = allowed[msg.sender][_spender].add(_addedValue);
********************************************************************************
MUTANT #373:
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.133.sol: 424contracts//0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.sol:45
        allowance[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowance[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #374:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.1036.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:440
			tAmount = tAmount.add(_amount);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #375:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.276.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:257
    require(!mintingFinished);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #376:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.809.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:568
    require(!slaveWalletPercentInitialized);
 ==>  revert();
revert();
********************************************************************************
MUTANT #377:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.162.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:93
    balances[_to] = balances[_to].add(_value);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #378:
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.72.sol: 424contracts//0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.sol:37
		allowance[msg.sender][spender] = value;							
 ==>  ...msg...sender...==>...tx...origin...
		allowance[tx.origin][spender] = value;							
********************************************************************************
MUTANT #379:
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.130.sol: 424contracts//0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.sol:73
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #380:
0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.mutant.34.sol: 424contracts//0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.sol:19
            balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            balances[tx.origin] -= _value;
********************************************************************************
MUTANT #381:
0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.mutant.132.sol: 424contracts//0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.sol:73
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #382:
0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.mutant.139.sol: 424contracts//0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.sol:75
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #383:
0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.mutant.138.sol: 424contracts//0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.sol:73
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #384:
0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.mutant.126.sol: 424contracts//0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.sol:75
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #385:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.395.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:542
    _ownedTokensCount[from] = _ownedTokensCount[from].sub(1);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #386:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.467.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:518
        return super.mint(_to, _amount);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #387:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.345.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:518
    require(ownerOf(tokenId) == owner);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #388:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.184.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:92
        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);
 ==>  revert();
revert();
********************************************************************************
MUTANT #389:
0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.mutant.49.sol: 424contracts//0x7bc8e26db75dfc68ee5ef70420e2327b23224e6e_TokenVault.sol:38
    return a - b;
 ==>  ...-...==>.../...
    return a / b;
********************************************************************************
MUTANT #390:
0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.mutant.244.sol: 424contracts//0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.sol:178
    allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #391:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.213.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:237
    allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #392:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.396.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:542
    _ownedTokensCount[from] = _ownedTokensCount[from].sub(1);
 ==>  revert();
revert();
********************************************************************************
MUTANT #393:
0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.mutant.27.sol: 424contracts//0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.sol:17
        c = a - b;
 ==>  ...-...==>...%...
        c = a % b;
********************************************************************************
MUTANT #394:
0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.mutant.25.sol: 424contracts//0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.sol:62
        c = a - b;
 ==>  ...-...==>.../...
        c = a / b;
********************************************************************************
MUTANT #395:
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.30.sol: 424contracts//0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.sol:28
        c = a - b;
 ==>  ...-...==>...%...
        c = a % b;
********************************************************************************
MUTANT #396:
0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.mutant.29.sol: 424contracts//0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.sol:28
        c = a - b;
 ==>  ...-...==>...%...
        c = a % b;
********************************************************************************
MUTANT #397:
0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.mutant.31.sol: 424contracts//0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.sol:25
        c = a - b;
 ==>  ...-...==>...%...
        c = a % b;
********************************************************************************
MUTANT #398:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.119.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:98
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_value);
********************************************************************************
MUTANT #399:
0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.mutant.226.sol: 424contracts//0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.sol:162
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_value);
********************************************************************************
MUTANT #400:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.89.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:95
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_value);
********************************************************************************
MUTANT #401:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.199.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:221
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_value);
********************************************************************************
MUTANT #402:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.981.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:294
            emit ManagerSold(msg.sender, _gameWalletAddr, 7, nextCommonTTMTokenId7);
 ==>  revert();
revert();
********************************************************************************
MUTANT #403:
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.323.sol: 424contracts//0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.sol:279
      allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
      allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_value);
********************************************************************************
MUTANT #404:
0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.mutant.158.sol: 424contracts//0x911ce7a305ed6411191d134af8d835cf7bde22c6_Hyperion.sol:94
            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  ...msg...sender...==>...tx...origin...
            allowed[_from][tx.origin] = allowed[_from][msg.sender].sub(_value);
********************************************************************************
MUTANT #405:
0x1515a1cA7b7963E7FFd3bA4C32398d27E5f3a1c8_GDC.mutant.125.sol: 424contracts//0x1515a1cA7b7963E7FFd3bA4C32398d27E5f3a1c8_GDC.sol:67
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #406:
0x79a6e552b1bf27fff02f383ae795bd35dd2f3f8c_TokenBBB17.mutant.103.sol: 424contracts//0x79a6e552b1bf27fff02f383ae795bd35dd2f3f8c_TokenBBB17.sol:69
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #407:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.216.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:93
    allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #408:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.237.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:268
    require(!mintingFinished);
 ==>  revert();
revert();
********************************************************************************
MUTANT #409:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.125.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:73
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #410:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.239.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:278
  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {
 ==>  ...onlyOwner...==>...
  function mint(address _to, uint256 _amount)  canMint public returns (bool) {
********************************************************************************
MUTANT #411:
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.169.sol: 424contracts//0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.sol:242
        balances[msg.sender] = balances[msg.sender].sub(tokens);
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] = balances[msg.sender].sub(tokens);
********************************************************************************
MUTANT #412:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.5.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:14
    modifier onlyOwner { if (msg.sender != owner) throw; _; }
 ==>  ...msg...sender...==>...tx...origin...
    modifier onlyOwner { if (tx.origin != owner) throw; _; }
********************************************************************************
MUTANT #413:
0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.mutant.258.sol: 424contracts//0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.sol:169
        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        allowed[from][tx.origin] = safeSub(allowed[from][msg.sender], tokens);
********************************************************************************
MUTANT #414:
0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.mutant.255.sol: 424contracts//0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.sol:214
        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        allowed[from][tx.origin] = safeSub(allowed[from][msg.sender], tokens);
********************************************************************************
MUTANT #415:
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.230.sol: 424contracts//0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.sol:147
        balances[msg.sender] = safeSub(balances[msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] = safeSub(balances[msg.sender], tokens);
********************************************************************************
MUTANT #416:
0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.mutant.260.sol: 424contracts//0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.sol:180
        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        allowed[from][tx.origin] = safeSub(allowed[from][msg.sender], tokens);
********************************************************************************
MUTANT #417:
0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.mutant.299.sol: 424contracts//0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.sol:177
        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
 ==>  ...msg...sender...==>...tx...origin...
        allowed[from][tx.origin] = safeSub(allowed[from][msg.sender], tokens);
********************************************************************************
MUTANT #418:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.124.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:69
      balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
      balances[tx.origin] -= _value;
********************************************************************************
MUTANT #419:
0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.mutant.182.sol: 424contracts//0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.sol:82
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #420:
0x1515a1cA7b7963E7FFd3bA4C32398d27E5f3a1c8_GDC.mutant.105.sol: 424contracts//0x1515a1cA7b7963E7FFd3bA4C32398d27E5f3a1c8_GDC.sol:54
        allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #421:
0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.mutant.96.sol: 424contracts//0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.sol:58
        balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] -= _value;
********************************************************************************
MUTANT #422:
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.150.sol: 424contracts//0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.sol:115
        allowance[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowance[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #423:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.216.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:133
        allowance[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowance[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #424:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.127.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:205
        // Fail if you arent on the `allowedSpenders` white list
 ==>  revert();
revert();
********************************************************************************
MUTANT #425:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.346.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:518
    require(ownerOf(tokenId) == owner);
 ==>  revert();
revert();
********************************************************************************
MUTANT #426:
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.113.sol: 424contracts//0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.sol:62
            allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #427:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.35.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:49
            balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            balances[tx.origin] -= _value;
********************************************************************************
MUTANT #428:
0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.mutant.103.sol: 424contracts//0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.sol:31
            allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #429:
0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.mutant.115.sol: 424contracts//0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.sol:62
            allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #430:
0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.mutant.122.sol: 424contracts//0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.sol:64
            allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #431:
0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.mutant.121.sol: 424contracts//0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.sol:62
            allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #432:
0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.mutant.109.sol: 424contracts//0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.sol:64
            allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
            allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #433:
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.123.sol: 424contracts//0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.sol:51
		allowance[from][msg.sender] -= value;							
 ==>  ...msg...sender...==>...tx...origin...
		allowance[from][tx.origin] -= value;							
********************************************************************************
MUTANT #434:
0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.mutant.168.sol: 424contracts//0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.sol:169
    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = allowed[msg.sender][_spender].add(_addedValue);
********************************************************************************
MUTANT #435:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.384.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:316
    function setTimelock(uint _newTimeLock) onlyOwner {
 ==>  ...onlyOwner...==>...
    function setTimelock(uint _newTimeLock)  {
********************************************************************************
MUTANT #436:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.544.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:244
    orders[msg.sender][hash] = true;
 ==>  ...msg...sender...==>...tx...origin...
    orders[tx.origin][hash] = true;
********************************************************************************
MUTANT #437:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.684.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:258
        } else if (f == 2) {
 ==>  ...else...==>...
        }  if (f == 2) {
********************************************************************************
MUTANT #438:
0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.mutant.221.sol: 424contracts//0x0e6c6e01f02bbeeed3c0166fca9c234b88605b43_VIUREFoundersTokenSale.sol:72
    if (!is_min_goal_reached()) throw;
 ==>  revert();
revert();
********************************************************************************
MUTANT #439:
0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.mutant.219.sol: 424contracts//0x377d7480849cd03dc4048243ee4a397fc00bfaaf_NullBlockCoin.sol:148
        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance
 ==>  ...msg...sender...==>...tx...origin...
        allowance[_from][tx.origin] -= _value;             // Subtract from the sender's allowance
********************************************************************************
MUTANT #440:
0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.mutant.164.sol: 424contracts//0xf6ed7942a5f79e49098ce7082cfee92d44160756_SCPSToken.sol:130
        balanceOf[msg.sender] -= _value;            // Subtract from the sender
 ==>  ...msg...sender...==>...tx...origin...
        balanceOf[tx.origin] -= _value;            // Subtract from the sender
********************************************************************************
MUTANT #441:
0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.mutant.235.sol: 424contracts//0x8b141bc2f7a130d166e0a94331e1c5cc7e9832e2_TripPay.sol:165
        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance
 ==>  ...msg...sender...==>...tx...origin...
        allowance[_from][tx.origin] -= _value;             // Subtract from the sender's allowance
********************************************************************************
MUTANT #442:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.249.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:165
        balanceOf[msg.sender] -= _value;            // Subtract from the sender
 ==>  ...msg...sender...==>...tx...origin...
        balanceOf[tx.origin] -= _value;            // Subtract from the sender
********************************************************************************
MUTANT #443:
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.296.sol: 424contracts//0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.sol:127
      balances[msg.sender] = balances[msg.sender].sub(tokens);
 ==>  ...msg...sender...==>...tx...origin...
      balances[tx.origin] = balances[msg.sender].sub(tokens);
********************************************************************************
MUTANT #444:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.674.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:431
    for (uint i = 0; i < stages.length; i++) {
 ==>  ...<...==>...==...
    for (uint i = 0; i == stages.length; i++) {
********************************************************************************
MUTANT #445:
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.241.sol: 424contracts//0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.sol:153
            allowed[msg.sender][_spender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
            allowed[tx.origin][_spender] = 0;
********************************************************************************
MUTANT #446:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1179.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:347
            } else {
 ==>  ...else...==>...
            }  {
********************************************************************************
MUTANT #447:
0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.mutant.149.sol: 424contracts//0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.sol:146
    allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #448:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.102.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:111
    allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #449:
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.346.sol: 424contracts//0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.sol:295
      allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #450:
0x79a6e552b1bf27fff02f383ae795bd35dd2f3f8c_TokenBBB17.mutant.89.sol: 424contracts//0x79a6e552b1bf27fff02f383ae795bd35dd2f3f8c_TokenBBB17.sol:59
        allowed[_from][msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[_from][tx.origin] -= _value;
********************************************************************************
MUTANT #451:
0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.mutant.288.sol: 424contracts//0x2ec79c67cb6ad4e3f8206fd8264620f3c476ebbd_MultiSigWalletWithDailyLimit.sol:245
        confirmations[transactionId][msg.sender] = true;
 ==>  ...msg...sender...==>...tx...origin...
        confirmations[transactionId][tx.origin] = true;
********************************************************************************
MUTANT #452:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.147.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:114
    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = allowed[msg.sender][_spender].add(_addedValue);
********************************************************************************
MUTANT #453:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1374.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:376
            require(_value == 0.585 ether);
 ==>  revert();
revert();
********************************************************************************
MUTANT #454:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1480.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:394
            emit ManagerSold(_buyer, _gameWalletAddr, 2, nextCommonTTMTokenId2);
 ==>  revert();
revert();
********************************************************************************
MUTANT #455:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.59.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:36
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
  function add(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #456:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1120.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:340
        private  
 ==>  ...private...==>...
          
********************************************************************************
MUTANT #457:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.994.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:295
        } else if (_mgrId == 8) {
 ==>  ...else...==>...
        }  if (_mgrId == 8) {
********************************************************************************
MUTANT #458:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1607.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:406
            emit ManagerSold(_buyer, _gameWalletAddr, 7, nextCommonTTMTokenId7);
 ==>  revert();
revert();
********************************************************************************
MUTANT #459:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.348.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:306
    require(!mintingFinished);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #460:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.349.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:306
    require(!mintingFinished);
 ==>  revert();
revert();
********************************************************************************
MUTANT #461:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.358.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:316
  function mint(address _to, uint256 _amount) onlyOwner canMint returns (bool) {
 ==>  ...onlyOwner...==>...
  function mint(address _to, uint256 _amount)  canMint returns (bool) {
********************************************************************************
MUTANT #462:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.360.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:317
    totalSupply = totalSupply.add(_amount);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #463:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.361.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:317
    totalSupply = totalSupply.add(_amount);
 ==>      ...otalSupply = totalSupply.add..._amount...==>rever...
revert();
********************************************************************************
MUTANT #464:
0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.mutant.263.sol: 424contracts//0xec821190f78bffaca775c3d607475ec7cd6686ea_Zignal.sol:133
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #465:
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.169.sol: 424contracts//0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.sol:111
        if (success) {
 ==>  ...uccess...==>...fal...e...
        if (false) {
********************************************************************************
MUTANT #466:
0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.mutant.200.sol: 424contracts//0x1442a8fd038e0253ab07fd0e6aa70413d961f315_BurnableOpenPaymentFactory.sol:136
        if (success) {
 ==>  ...succ...ss...==>...tru...
        if (true) {
********************************************************************************
MUTANT #467:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.260.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:135
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #468:
0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.mutant.225.sol: 424contracts//0x6e7cf33736bafee311a73093741f93ab8cd6530c_ERC20Token.sol:344
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #469:
0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.mutant.183.sol: 424contracts//0xb063acc75387dd60eee2ddce01adec93e8624273_CandyCoinBigBang.sol:77
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #470:
0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.mutant.246.sol: 424contracts//0x7bD93D340e712F0b5F0A67bF217438cd9F7B5771_STTC.sol:112
        balances[msg.sender] -= _value;
 ==>  ...msg...sender...==>...tx...origin...
        balances[tx.origin] -= _value;
********************************************************************************
MUTANT #471:
0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.mutant.262.sol: 424contracts//0x836df2f88797c85bdead4bb780aabadf0a738e15_Tutancoin.sol:126
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #472:
0x79a6e552b1bf27fff02f383ae795bd35dd2f3f8c_TokenBBB17.mutant.149.sol: 424contracts//0x79a6e552b1bf27fff02f383ae795bd35dd2f3f8c_TokenBBB17.sol:106
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #473:
0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.mutant.217.sol: 424contracts//0x4a41661a42436b4b07bc887abcf69b07d567c706_THXToken.sol:128
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #474:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.352.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:402
    return true;
 ==>  revert();
revert();
********************************************************************************
MUTANT #475:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.376.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:430
    return true;
 ==>  revert();
revert();
********************************************************************************
MUTANT #476:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.400.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:454
    return true;
 ==>  revert();
revert();
********************************************************************************
MUTANT #477:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.424.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:478
    return true;
 ==>  revert();
revert();
********************************************************************************
MUTANT #478:
0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.mutant.280.sol: 424contracts//0xc2addba7c18381eea227f76415fd2b4b4686a70b_Cred.sol:191
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #479:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.384.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:259
    return true;
 ==>  revert();
revert();
********************************************************************************
MUTANT #480:
0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.mutant.274.sol: 424contracts//0x4583655912cd2bc084789599c9b6b320ece8a9b1_GayBananaToken.sol:236
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #481:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.406.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:205
    if (msg.sender != admin) revert();
 ==>  ...revert();...==>...
    if (msg.sender != admin) 
********************************************************************************
MUTANT #482:
0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.mutant.283.sol: 424contracts//0x6a4e703c8c2bd0d9036e65acf6d476ce38f3d981_GlobalChain.sol:202
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #483:
0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.mutant.202.sol: 424contracts//0x99e8984addb9e002953525f13d2625b409a63ffa_SunQuid.sol:109
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #484:
0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.mutant.191.sol: 424contracts//0xe14620fdd87fa5717faab731a37abd813ef1e33e_ERC20Token.sol:116
        allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #485:
0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.mutant.281.sol: 424contracts//0x9a95a3aeb8ed9fc76e5992f11678d9ec3b322b31_Hostingicos.sol:202
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #486:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.186.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:102
     */
 ==>       */...==>selfdestruct(msg.sender);...
selfdestruct(msg.sender);
********************************************************************************
MUTANT #487:
0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.mutant.319.sol: 424contracts//0xdd08ad1bfcb4bdb1b8dd881581ee00b9f08834a0_LerToken.sol:199
        allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #488:
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.314.sol: 424contracts//0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.sol:135
      allowed[msg.sender][spender] = tokens;
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][spender] = tokens;
********************************************************************************
MUTANT #489:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.379.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:308
    function setSecurityGuard(address _newSecurityGuard) onlyOwner {
 ==>  ...onlyOwner...==>...
    function setSecurityGuard(address _newSecurityGuard)  {
********************************************************************************
MUTANT #490:
0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.mutant.49.sol: 424contracts//0xe7397506372c651537655a89769f3d43d01b64f1_MOROCCO_WINS.sol:23
		balanceOf[msg.sender] -= value;  // deduct from sender's balance							
 ==>  ...msg...sender...==>...tx...origin...
		balanceOf[tx.origin] -= value;  // deduct from sender's balance							
********************************************************************************
MUTANT #491:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.221.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:119
        uint256 amount = msg.value * unitsOneEthCanBuy;
 ==>  ...msg.value...==>...1...
        uint256 amount = 1 * unitsOneEthCanBuy;
********************************************************************************
MUTANT #492:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.131.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:104
    allowed[msg.sender][_spender] = _value;
 ==>  ...msg...sender...==>...tx...origin...
    allowed[tx.origin][_spender] = _value;
********************************************************************************
MUTANT #493:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.200.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:239
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #494:
0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.mutant.102.sol: 424contracts//0x9cf8496d037b897103b543758bde610a02d94605_ForkRC.sol:145
  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 _a, uint256 _b)  pure returns (uint256) {
********************************************************************************
MUTANT #495:
0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.mutant.154.sol: 424contracts//0x1493894bf2468f08fd232c5699b1c24dd33cec18_HFTToken.sol:51
        balanceOf[msg.sender] -= _value;            
 ==>  ...msg...sender...==>...tx...origin...
        balanceOf[tx.origin] -= _value;            
********************************************************************************
MUTANT #496:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.24.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:52
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
  function add(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #497:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.7.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:36
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #498:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.183.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:221
        p.recipient = _recipient;
 ==>  revert();
revert();
********************************************************************************
MUTANT #499:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.896.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:288
        } else if (_mgrId == 7) {
 ==>  ...else...==>...
        }  if (_mgrId == 7) {
********************************************************************************
MUTANT #500:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.141.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:210
        // The following lines fill out the payment struct
 ==>  revert();
revert();
********************************************************************************
MUTANT #501:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.883.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:287
            emit ManagerSold(msg.sender, _gameWalletAddr, 3, nextCommonTTMTokenId3);
 ==>  revert();
revert();
********************************************************************************
MUTANT #502:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.253.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:129
        //Transfer ether to fundsWallet
 ==>  revert();
revert();
********************************************************************************
MUTANT #503:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.246.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:395
    require(to != address(0));
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #504:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.37.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:21
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
    function sub(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #505:
0xecb9dac84d77a4a31264cdb2f863288a6fc44235_Crowdsale.mutant.184.sol: 424contracts//0xecb9dac84d77a4a31264cdb2f863288a6fc44235_Crowdsale.sol:80
            balanceOf[msg.sender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
            balanceOf[tx.origin] = 0;
********************************************************************************
MUTANT #506:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.585.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:288
				if ( now >= icoStartTime && now < ico1StartTime){ tTokenPerEth = icoPerEth; }
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #507:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.1543.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:400
            emit ManagerSold(_buyer, _gameWalletAddr, 3, nextCommonTTMTokenId3);
 ==>  revert();
revert();
********************************************************************************
MUTANT #508:
0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.mutant.383.sol: 424contracts//0x25066b77ae6174d372a9fe2b1d7886a2be150e9b_PolarisDEX.sol:199
    if (msg.sender != admin) revert();
 ==>  ...revert();...==>...
    if (msg.sender != admin) 
********************************************************************************
MUTANT #509:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.235.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:394
    require(_isApprovedOrOwner(msg.sender, tokenId));
 ==>  revert();
revert();
********************************************************************************
MUTANT #510:
0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.mutant.511.sol: 424contracts//0x41642b325a44df26357aad70f013d828f5adc52a_DEVNETCoin.sol:202
      pendingWithdrawals[msg.sender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
      pendingWithdrawals[tx.origin] = 0;
********************************************************************************
MUTANT #511:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.601.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:402
    require(number >= 0 && number < stages.length);
 ==>  revert();
revert();
********************************************************************************
MUTANT #512:
0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.mutant.17.sol: 424contracts//0x6dceb0027a9e92ddfccc09a00d0779d3c1e2a8b7_NetkillerAdvancedToken.sol:22
    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {
 ==>  ...internal...==>...
    function add(uint256 a, uint256 b)  pure returns (uint256 c) {
********************************************************************************
MUTANT #513:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.44.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:31
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  pure returns (uint256) {
********************************************************************************
MUTANT #514:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.62.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:26
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function add(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #515:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.417.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:273
  function transfer(address _to, uint256 _value) public notLocked returns (bool) {
 ==>  ...notLocked...==>...
  function transfer(address _to, uint256 _value) public  returns (bool) {
********************************************************************************
MUTANT #516:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.166.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:217
        // Determines the earliest the recipient can receive payment (Unix time)
 ==>  revert();
revert();
********************************************************************************
MUTANT #517:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.560.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:387
    totalHardcap = totalHardcap.sub(stage.hardcap);    
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #518:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.600.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:402
    require(number >= 0 && number < stages.length);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #519:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.176.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:124
      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = oldValue.sub(_subtractedValue);
********************************************************************************
MUTANT #520:
0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.mutant.291.sol: 424contracts//0x38c99e98171e70ba535eab1cfc91dcadaeb6f3e4_TOKToken.sol:222
      allowed[msg.sender][_spender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = 0;
********************************************************************************
MUTANT #521:
0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.mutant.197.sol: 424contracts//0x9cc2ffa71ab3464b11028bda8ce5fec759e4957d_AACToken.sol:180
      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = oldValue.sub(_subtractedValue);
********************************************************************************
MUTANT #522:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.148.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:157
      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = oldValue.sub(_subtractedValue);
********************************************************************************
MUTANT #523:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.253.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:281
      allowed[msg.sender][_spender] = 0;
 ==>  ...msg...sender...==>...tx...origin...
      allowed[tx.origin][_spender] = 0;
********************************************************************************
MUTANT #524:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.138.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:208
        authorizedPayments.length++;
 ==>  revert();
revert();
********************************************************************************
MUTANT #525:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.250.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:127
        Transfer(fundsWallet, msg.sender, amount); // Broadcast a message to the blockchain
 ==>  revert();
revert();
********************************************************************************
MUTANT #526:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.276.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:123
    function calculateTokensReceived(uint256 _ethereumToSpend) public view returns(uint256) {}
 ==>  ...returns(uint256)...==>...
    function calculateTokensReceived(uint256 _ethereumToSpend) public view  {}
********************************************************************************
MUTANT #527:
0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.mutant.414.sol: 424contracts//0x616085c0b50e450a084a2c3871d0297cc409b38b_TokenVault.sol:341
        allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
 ==>  ...msg...sender...==>...tx...origin...
        allowed[tx.origin][_spender] = oldValue.sub(_subtractedValue);
********************************************************************************
MUTANT #528:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.631.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:292
				tokensPerEth = tTokenPerEth;				
 ==>  revert();
revert();
********************************************************************************
MUTANT #529:
0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.mutant.170.sol: 424contracts//0x73bd0cba93bbb6bc332ad47ea0ae31ae05e44cb0_HyperChipToken.sol:90
        emit Transfer(_from, _to, _value);
 ==>  revert();
revert();
********************************************************************************
MUTANT #530:
0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.mutant.78.sol: 424contracts//0x134a2b5b1a1e3f3c3c7cfed71000035a53d4d127_OPC.sol:58
    function start() auth  {
 ==>  ...auth...==>...
    function start()   {
********************************************************************************
MUTANT #531:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.296.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:478
    // Disable solium check because of
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #532:
0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.mutant.150.sol: 424contracts//0x6c26dab04c8f2bb07e60f205118e36850fe90981_PoWMLottery.sol:73
        token_buyins[msg.sender] = tokens_bought;
 ==>  ...msg...sender...==>...tx...origin...
        token_buyins[tx.origin] = tokens_bought;
********************************************************************************
MUTANT #533:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.249.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:397
    _clearApproval(from, tokenId);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #534:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.390.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:541
    require(ownerOf(tokenId) == from);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #535:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.391.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:541
    require(ownerOf(tokenId) == from);
 ==>  revert();
revert();
********************************************************************************
MUTANT #536:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.400.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:543
    _tokenOwner[tokenId] = address(0);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #537:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.401.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:543
    _tokenOwner[tokenId] = address(0);
 ==>  revert();
revert();
********************************************************************************
MUTANT #538:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.247.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:395
    require(to != address(0));
 ==>  revert();
revert();
********************************************************************************
MUTANT #539:
0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.mutant.131.sol: 424contracts//0x598ab825d607ace3b00d8714c0a141c7ae2e6822_Vault.sol:206
        if (!allowedSpenders[msg.sender] ) throw;
 ==>  revert();
revert();
********************************************************************************
MUTANT #540:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.50.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:22
    assert(b <= a);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #541:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.803.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:280
            emit ManagerSold(msg.sender, _gameWalletAddr, 2, nextCommonTTMTokenId2);
 ==>  revert();
revert();
********************************************************************************
MUTANT #542:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.875.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:286
            ttmToken.safeGiveByContract(nextCommonTTMTokenId3 - 1, _gameWalletAddr);
 ==>  revert();
revert();
********************************************************************************
MUTANT #543:
0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.mutant.468.sol: 424contracts//0xe30a71938b743d126E977A2b3F7450484F209a34_DAOToken.sol:518
        return super.mint(_to, _amount);
 ==>  revert();
revert();
********************************************************************************
MUTANT #544:
0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.mutant.116.sol: 424contracts//0x8f3f398d0087e387743cb8c9ee7c7acbe1dbb37c_TrueLogic.sol:97
    balances[_to] = balances[_to].add(_value);
 ==>  revert();
revert();
********************************************************************************
MUTANT #545:
0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.mutant.202.sol: 424contracts//0x7f4C1ea56e9E4ab0B47bddc396F131074919E25f_NinjaCoinNC.sol:221
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
 ==>  revert();
revert();
********************************************************************************
MUTANT #546:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.605.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:404
    totalHardcap = totalHardcap.sub(stage.hardcap);    
 ==>  revert();
revert();
********************************************************************************
MUTANT #547:
0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.mutant.612.sol: 424contracts//0x8604ef1a75999a916f42ed5b30a686b5e6cf90de_MYTCToken.sol:405
    stage.hardcap = hardcap.mul(1 ether);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #548:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.788.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:278
            nextCommonTTMTokenId2 += 1;
 ==>  revert();
revert();
********************************************************************************
MUTANT #549:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.250.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:397
    _clearApproval(from, tokenId);
 ==>  revert();
revert();
********************************************************************************
MUTANT #550:
0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.mutant.702.sol: 424contracts//0x968815CD73647C3af02a740a2438D6f8219e7534_TTPresale.sol:260
        } else if (f == 3) {
 ==>  ...else...==>...
        }  if (f == 3) {
********************************************************************************
MUTANT #551:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.91.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:62
    balances[msg.sender] = balances[msg.sender].sub(_value);
 ==>  revert();
revert();
********************************************************************************
MUTANT #552:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.624.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:290
				if ( now >= ico2StartTime && now < icoEndTime){ tTokenPerEth = ico2PerEth; }
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #553:
0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.mutant.245.sol: 424contracts//0xf340358c95ef99200777bc8eb3b2b2edab9bbc88_HashnodeTestCoin.sol:125
        balances[msg.sender] = balances[msg.sender] + amount;
 ==>  revert();
revert();
********************************************************************************
MUTANT #554:
0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.mutant.252.sol: 424contracts//0x534ccee849a688581d1b0c65e7ff317ed10c5ed3_NametagToken.sol:398
    _removeTokenFrom(from, tokenId);
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #555:
0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.mutant.604.sol: 424contracts//0xd6fb9c69d7f3307c151c41a56227f7e3e4d08526_COBABURN.sol:289
				if ( now >= ico1StartTime && now < ico2StartTime){ tTokenPerEth = ico1PerEth; }
 ==>  selfdestruct(msg.sender);
selfdestruct(msg.sender);
********************************************************************************
MUTANT #556:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #557:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #558:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #559:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #560:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #561:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #562:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #563:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #564:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #565:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #566:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #567:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #568:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #569:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #570:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #571:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #572:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #573:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #574:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #575:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #576:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #577:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #578:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #579:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #580:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #581:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #582:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #583:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #584:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #585:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #586:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
********************************************************************************
MUTANT #587:
0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.mutant.44.sol: 424contracts//0xc936a131b1f1576ccadb8196d91ecbf108d11d01_EmpireCrowdsale.sol:21
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
 ==>  ...internal...==>...
  function sub(uint256 a, uint256 b)  constant returns (uint256) {
